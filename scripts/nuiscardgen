#!/bin/bash

parse_bool () {
  if [[ "${1}" == "true" ]] || [[ "${1}" == "TRUE" ]] || [[ "${1}" == "True" ]]\
    || [[ "${1}" == "t" ]] || [[ "${1}" == "T" ]]  || [[ "${1}" == "y" ]]\
    || [[ "${1}" == "yes" ]] || [[ "${1}" == "Yes" ]] || [[ "${1}" == "1" ]]
    then
    ISTRUE=1
    return 0
  fi
  if [[ "${1}" == "false" ]] || [[ "${1}" == "FALSE" ]]\
    || [[ "${1}" == "False" ]] || [[ "${1}" == "f" ]] || [[ "${1}" == "F" ]]\
    || [[ "${1}" == "n" ]]  || [[ "${1}" == "no" ]] || [[ "${1}" == "No" ]]\
    || [[ "${1}" == "0" ]]; then
    ISTRUE=0
    return 0
  fi

  echo "[WARN]: Failed to parse \"${1}\" as a boolean value"
  ISTRUE=-1
}

#Pass "Message to print" "default:y/n"
ask_bool (){
  ISTRUE=-1
  while [[ "${ISTRUE}" -lt "0" ]]; do
    echo -n "${1}"
    read INTERBOOL
    if [[ ! "${INTERBOOL}" ]]; then
      parse_bool ${2}
    else
      parse_bool ${INTERBOOL}
    fi
  done
}

check_exist (){
  if [[ "${1}" ]] && [[ -e "${1}" ]]; then
    FILE_EXISTS=1
    return 0
  fi
  if [[ ! "${1}" ]]; then
    FILE_EXISTS=-1
  else
    echo -n "[WARN]: File \"${1}\" does not exist, please enter another file or"
    echo " leave blank to ignore sample."
    FILE_EXISTS=0
  fi
}

select_gen (){
  if [[ ! "${1}" ]]; then
    echo "[INFO]: Assuming input files are from the NEUT Generator"
    GEN="NEUT"
    GEN_TAG="NEUT:"
  elif [[ "${1}" == "NEUT" ]] || [[ "${1}" == "neut" ]]\
   || [[ "${1}" == "Neut" ]]; then
    GEN="NEUT"
    GEN_TAG="NEUT:"
  elif [[ "${1}" == "GENIE" ]] || [[ "${1}" == "genie" ]]\
   || [[ "${1}" == "Genie" ]]; then
    GEN="GENIE"
    GEN_TAG="GENIE:"
  elif [[ "${1}" == "NUWRO" ]] || [[ "${1}" == "Nuwro" ]]\
   || [[ "${1}" == "NuWro" ]] || [[ "${1}" == "nuwro" ]]; then
    GEN="NUWRO"
    GEN_TAG="NUWRO:"
  elif [[ "${1}" == "GIBUU" ]] || [[ "${1}" == "GiBUU" ]]\
   || [[ "${1}" == "Gibuu" ]] || [[ "${1}" == "gibuu" ]]; then
    GEN="GiBUU"
    GEN_TAG="GiBUU:"
  elif [[ "${1}" == "NUANCE" ]] || [[ "${1}" == "Nuance" ]]\
   || [[ "${1}" == "nuance" ]]; then
    GEN="NUANCE"
    GEN_TAG="NUANCE:"
  else
    echo "[ERROR]: Unknown generator ${1}."
    exit 1
  fi

}

echo "Welcome to the NUISANCE interactive card builder."

## Generator
echo -e -n "Which generator are you interested in? [NEUT]/GENIE/NUWRO/GIBUU/NUANCE? "
read GENNAME
select_gen ${GENNAME}

## Interesting species
ask_bool "Are you interested in muon neutrino beam modes (FHC/PP/FC) [y]/n? " "y"
DO_NU=${ISTRUE}

ask_bool "Are you interested in muon anti-neutrino beam modes (RHC/NP/RC) y/[n]? " "n"
DO_NUB=${ISTRUE}

## Interesting Topologies
ask_bool "Are you interested in QE-like samples [y]/n? " "y"
DO_QEL=${ISTRUE}

ask_bool "Are you interested in CCPi samples [y]/n? " "y"
DO_PIPROD=${ISTRUE}

ask_bool "Are you interested in CCInclusive samples y/[n]? " "n"
DO_CCINC=${ISTRUE}

ask_bool "Are you interested in NC samples y/[n]? " "n"
DO_NC=${ISTRUE}

ask_bool "Are you interested in bubble chamber samples [y]/n? " "y"
DO_BUBBLE=${ISTRUE}

ask_bool "Are you interested in nuclear-target samples [y]/n? " "y"
DO_NUCLEAR=${ISTRUE}
## Interesting Targets

## Only offer most-up-to-date results
ask_bool "Are you interested in only the most up-to-date results [y]/n? " "y"
DO_OLD=${ISTRUE}

# echo "GEN_TAG: ${GEN_TAG}"
# echo "GEN_TAG: ${GEN_TAG}"
# echo "DO_NU: ${DO_NU}"
# echo "DO_NUB: ${DO_NUB}"
# echo "DO_QEL: ${DO_QEL}"
# echo "DO_PIPROD: ${DO_PIPROD}"
# echo "DO_CCINC: ${DO_CCINC}"
# echo "DO_NC: ${DO_NC}"
# echo "DO_BUBBLE: ${DO_BUBBLE}"
# echo "DO_NUCLEAR: ${DO_NUCLEAR}"
# echo "DO_OLD: ${DO_OLD}"

## Check set up
if [[ "${DO_NU}" == "0" ]] && [[ "${DO_NUB}" == "0" ]]; then
  echo -n "[ERROR]: Not using neutrino or anti-neutrino mode beams, no samples"
  echo " will be selected."
  exit 1
fi
if [[ "${DO_QEL}" == "0" ]] && [[ "${DO_PIPROD}" == "0" ]] && [[ "${DO_CCINC}" == "0" ]] && [[ "${DO_NC}" == "0" ]]; then
  echo -n "[ERROR]: Not using any interaction topologies, no samples"
  echo " will be selected."
  exit 1
fi
if [[ "${DO_BUBBLE}" == "0" ]] && [[ "${DO_NUCLEAR}" == "0" ]]; then
  echo -n "[ERROR]: Not using any target type, no samples"
  echo " will be selected."
  exit 1
fi

if [[ "${DO_QEL}" == "0" ]]; then QEL_PREFIX="#"; else QEL_PREFIX=""; fi
if [[ "${DO_PIPROD}" == "0" ]]; then PIPROD_PREFIX="#"; else PIPROD_PREFIX=""; fi
if [[ "${DO_CCINC}" == "0" ]]; then CCINC_PREFIX="#"; else CCINC_PREFIX=""; fi
if [[ "${DO_NC}" == "0" ]]; then NC_PREFIX="#"; else NC_PREFIX=""; fi
if [[ "${DO_OLD}" == "0" ]]; then OLD_PREFIX="#"; else OLD_PREFIX=""; fi

OUTPUTCARDFILE="generated.card"
echo "" > ${OUTPUTCARDFILE}

ANL_NUMU_FILELOC="_ANL_NUMU_INPUT_FILE_"
NUMU_PREFIX="#"
if [[ "${DO_BUBBLE}" == "1" ]] && [[ "${DO_NU}" == "1" ]] && ( [[ "${DO_QEL}" == "1" ]] || [[ "${DO_PIPROD}" == "1" ]] ); then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the ANL muon neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_PREFIX="#"
  else
    ANL_NUMU_FILELOC=${VECT_LOC}
    NUMU_PREFIX=""
  fi
fi

echo -e "\n#### ANL" >> ${OUTPUTCARDFILE}
echo -e "### QE-like\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${QEL_PREFIX}sample ANL_CCQE_XSec_1DEnu_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${QEL_PREFIX}${OLD_PREFIX}sample ANL_CCQE_XSec_1DEnu_nu_PRL31 ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${QEL_PREFIX}${OLD_PREFIX}sample ANL_CCQE_XSec_1DEnu_nu_PRD16 ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${QEL_PREFIX}sample ANL_CCQE_Evt_1DQ2_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${QEL_PREFIX}${OLD_PREFIX}sample ANL_CCQE_Evt_1DQ2_nu_PRL31 ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${QEL_PREFIX}${OLD_PREFIX}sample ANL_CCQE_Evt_1DQ2_nu_PRD16 ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}


echo -e "\n### 1Pi\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1ppip_XSec_1DEnu_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1ppip_XSec_1DQ2_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1ppip_Evt_1DQ2_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1ppip_Evt_1Dppi_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1ppip_Evt_1Dthpr_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1ppip_Evt_1DcosmuStar_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1ppip_Evt_1DcosthAdler_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1ppip_Evt_1Dphi_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1npip_XSec_1DEnu_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1npip_Evt_1DQ2_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1npip_Evt_1Dppi_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1npip_Evt_1DcosmuStar_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1pi0_XSec_1DEnu_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1pi0_Evt_1DQ2_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC1pi0_Evt_1DcosmuStar_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_NC1npip_Evt_1Dppi_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_NC1ppim_XSec_1DEnu_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_NC1ppim_Evt_1DcosmuStar_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

echo -e "\n### 2Pi\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pim1pip_XSec_1DEnu_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pim1pip_Evt_1Dpmu_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pim1pip_Evt_1Dppip_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pim1pip_Evt_1Dppim_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pim1pip_Evt_1Dpprot_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pip1pip_XSec_1DEnu_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pip1pip_Evt_1Dpmu_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pip1pip_Evt_1Dpneut_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pip1pip_Evt_1DppipHigh_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pip1pip_Evt_1DppipLow_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pip1pi0_XSec_1DEnu_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pip1pi0_Evt_1Dpmu_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pip1pi0_Evt_1Dppip_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pip1pi0_Evt_1Dppi0_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample ANL_CC2pi_1pip1pi0_Evt_1Dpprot_nu ${GEN_TAG}${ANL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}


BNL_NUMU_FILELOC="_BNL_NUMU_INPUT_FILE_"
NUMU_PREFIX="#"
if [[ "${DO_BUBBLE}" == "1" ]] && [[ "${DO_NU}" == "1" ]] && ( [[ "${DO_QEL}" == "1" ]] || [[ "${DO_PIPROD}" == "1" ]] ); then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the BNL muon neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_PREFIX="#"
  else
    BNL_NUMU_FILELOC=${VECT_LOC}
    NUMU_PREFIX=""
  fi
fi

echo -e "\n#### BNL" >> ${OUTPUTCARDFILE}
echo -e "### QE-like\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${QEL_PREFIX}sample BNL_CCQE_XSec_1DEnu_nu ${GEN_TAG}${BNL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${QEL_PREFIX}sample BNL_CCQE_Evt_1DQ2_nu ${GEN_TAG}${BNL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}


echo -e "\n### 1Pi\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BNL_CC1ppip_XSec_1DEnu_nu ${GEN_TAG}${BNL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BNL_CC1ppip_Evt_1DQ2_nu ${GEN_TAG}${BNL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BNL_CC1ppip_Evt_1DcosthAdler_nu ${GEN_TAG}${BNL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BNL_CC1ppip_Evt_1Dphi_nu ${GEN_TAG}${BNL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BNL_CC1npip_XSec_1DEnu_nu ${GEN_TAG}${BNL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BNL_CC1npip_Evt_1DQ2_nu ${GEN_TAG}${BNL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BNL_CC1pi0_XSec_1DEnu_nu ${GEN_TAG}${BNL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BNL_CC1pi0_Evt_1DQ2_nu ${GEN_TAG}${BNL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

FNAL_NUMU_FILELOC="_FNAL_NUMU_INPUT_FILE_"
NUMU_PREFIX="#"
if [[ "${DO_BUBBLE}" == "1" ]] && [[ "${DO_NU}" == "1" ]] && ( [[ "${DO_QEL}" == "1" ]] || [[ "${DO_PIPROD}" == "1" ]] ); then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the FNAL muon neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_PREFIX="#"
  else
    FNAL_NUMU_FILELOC=${VECT_LOC}
    NUMU_PREFIX=""
  fi
fi

echo -e "\n#### FNAL" >> ${OUTPUTCARDFILE}
echo -e "### QE-like\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${QEL_PREFIX}sample FNAL_CCQE_Evt_1DQ2_nu ${GEN_TAG}${FNAL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

echo -e "\n### 1Pi" >> ${OUTPUTCARDFILE}
echo -e "## numu\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample FNAL_CC1ppip_XSec_1DEnu_nu ${GEN_TAG}${FNAL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample FNAL_CC1ppip_XSec_1DQ2_nu ${GEN_TAG}${FNAL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample FNAL_CC1ppip_Evt_1DQ2_nu ${GEN_TAG}${FNAL_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

FNAL_NUMUB_FILELOC="_FNAL_NUMUB_INPUT_FILE_"
NUMUB_PREFIX="#"
if [[ "${DO_BUBBLE}" == "1" ]] && [[ "${DO_NUB}" == "1" ]] && [[ "${DO_PIPROD}" == "1" ]]; then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the FNAL muon anti-neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMUB_PREFIX="#"
  else
    FNAL_NUMUB_FILELOC=${VECT_LOC}
    NUMUB_PREFIX="#"
  fi
fi

echo -e "\n## numubar\n" >> ${OUTPUTCARDFILE}

echo "${NUMUB_PREFIX}${PIPROD_PREFIX}sample FNAL_CC1ppim_XSec_1DEnu_antinu ${GEN_TAG}${FNAL_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}

BEBC_NUMU_FILELOC="_BEBC_NUMU_INPUT_FILE_"
NUMU_PREFIX="#"
if [[ "${DO_BUBBLE}" == "1" ]] && [[ "${DO_NU}" == "1" ]] && ( [[ "${DO_QEL}" == "1" ]] || [[ "${DO_PIPROD}" == "1" ]] ); then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the BEBC muon neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_PREFIX="#"
  else
    BEBC_NUMU_FILELOC=${VECT_LOC}
    NUMU_PREFIX=""
  fi
fi

echo -e "\n#### BEBC" >> ${OUTPUTCARDFILE}
echo -e "### QE-like\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${QEL_PREFIX}sample BEBC_CCQE_XSec_1DQ2_nu ${GEN_TAG}${BEBC_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

echo -e "\n### 1Pi" >> ${OUTPUTCARDFILE}
echo -e "## numu\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BEBC_CC1ppip_XSec_1DEnu_nu ${GEN_TAG}${BEBC_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BEBC_CC1ppip_XSec_1DQ2_nu ${GEN_TAG}${BEBC_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BEBC_CC1npip_XSec_1DEnu_nu ${GEN_TAG}${BEBC_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BEBC_CC1npip_XSec_1DQ2_nu ${GEN_TAG}${BEBC_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BEBC_CC1pi0_XSec_1DEnu_nu ${GEN_TAG}${BEBC_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample BEBC_CC1pi0_XSec_1DQ2_nu ${GEN_TAG}${BEBC_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

BEBC_NUMUB_FILELOC="_BEBC_NUMUB_INPUT_FILE_"
NUMUB_PREFIX="#"
if [[ "${DO_BUBBLE}" == "1" ]] && [[ "${DO_NUB}" == "1" ]] && [[ "${DO_PIPROD}" == "1" ]]; then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the BEBC muon anti-neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMUB_PREFIX="#"
  else
    BEBC_NUMUB_FILELOC=${VECT_LOC}
    NUMUB_PREFIX=""
  fi
fi

echo -e "\n## numubar\n" >> ${OUTPUTCARDFILE}

echo "${NUMUB_PREFIX}${PIPROD_PREFIX}sample BEBC_CC1npim_XSec_1DEnu_antinu ${GEN_TAG}${BEBC_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_PREFIX}${PIPROD_PREFIX}sample BEBC_CC1npim_XSec_1DQ2_antinu ${GEN_TAG}${BEBC_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_PREFIX}${PIPROD_PREFIX}sample BEBC_CC1ppim_XSec_1DEnu_antinu ${GEN_TAG}${BEBC_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_PREFIX}${PIPROD_PREFIX}sample BEBC_CC1ppim_XSec_1DQ2_antinu ${GEN_TAG}${BEBC_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}


GGM_NUMU_FILELOC="_GGM_NUMU_INPUT_FILE_"
NUMU_PREFIX="#"
if [[ "${DO_BUBBLE}" == "1" ]] && [[ "${DO_NU}" == "1" ]] && [[ "${DO_PIPROD}" == "1" ]]; then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the Gargarmelle muon neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_PREFIX="#"
  else
    GGM_NUMU_FILELOC=${VECT_LOC}
    NUMU_PREFIX=""
  fi
fi

echo -e "\n#### Gargarmelle" >> ${OUTPUTCARDFILE}
echo -e "### 1Pi\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${QEL_PREFIX}sample GGM_CC1ppip_XSec_1DEnu_nu ${GEN_TAG}${GGM_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${QEL_PREFIX}sample GGM_CC1ppip_Evt_1DQ2_nu ${GEN_TAG}${GGM_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}


################## Nuclear

ARGONEUT_NUMU_FILELOC="_ARGONEUT_NUMU_INPUT_FILE_"
NUMU_PREFIX="#"
if [[ "${DO_NUCLEAR}" == "1" ]] && [[ "${DO_NU}" == "1" ]] && [[ "${DO_CCINC}" == "1" ]]; then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the ArgoNeuT muon neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_PREFIX="#"
  else
    ARGONEUT_NUMU_FILELOC=${VECT_LOC}
    NUMU_PREFIX=""
  fi
fi

echo -e "\n#### ArgoNeuT" >> ${OUTPUTCARDFILE}
echo "### CCINC" >> ${OUTPUTCARDFILE}
echo -e "## numu\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${CCINC_PREFIX}sample ArgoNeuT_CCInc_XSec_1Dpmu_nu ${GEN_TAG}${ARGONEUT_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${CCINC_PREFIX}sample ArgoNeuT_CCInc_XSec_1Dthetamu_nu ${GEN_TAG}${ARGONEUT_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}


ARGONEUT_NUMUB_FILELOC="_ARGONEUT_NUMUB_INPUT_FILE_"
NUMUB_PREFIX="#"
if [[ "${DO_NUCLEAR}" == "1" ]] && [[ "${DO_NUB}" == "1" ]] && [[ "${DO_CCINC}" == "1" ]]; then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the ArgoNeuT muon anti-neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMUB_PREFIX="#"
  else
    ARGONEUT_NUMUB_FILELOC=${VECT_LOC}
    NUMUB_PREFIX=""
  fi
fi

echo -e "\n## numubar\n" >> ${OUTPUTCARDFILE}

echo "${NUMUB_PREFIX}${CCINC_PREFIX}sample ArgoNeuT_CCInc_XSec_1Dpmu_antinu ${GEN_TAG}${ARGONEUT_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_PREFIX}${CCINC_PREFIX}sample ArgoNeuT_CCInc_XSec_1Dthetamu_antinu ${GEN_TAG}${ARGONEUT_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}



MB_NUMU_FILELOC="_MB_NUMU_INPUT_FILE_"
NUMU_PREFIX="#"
if [[ "${DO_NUCLEAR}" == "1" ]] && [[ "${DO_NU}" == "1" ]] && ( [[ "${DO_QEL}" == "1" ]] || [[ "${DO_PIPROD}" == "1" ]] || [[ "${DO_NC}" == "1" ]] ); then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the MiniBooNE muon neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_PREFIX="#"
  else
    MB_NUMU_FILELOC=${VECT_LOC}
    NUMU_PREFIX=""
  fi
fi

echo -e "\n#### MiniBooNE" >> ${OUTPUTCARDFILE}
echo "### QE-like" >> ${OUTPUTCARDFILE}
echo -e "## numu\n" >> ${OUTPUTCARDFILE}

INP_VECT_COMMAND="${GEN_TAG}${MB_NUMU_FILELOC}"
MB_NUMUB_IN_NUMU_FILELOC="_MB_NUMUB_IN_NUMU_INPUT_FILE_"
NUMU_JOINT_PREFIX="#"
if [[ "${MB_NUMU_FILELOC}" != "_MB_NUMU_INPUT_FILE_" ]] && ( [[ "${GEN}" == "NEUT" ]] || [[ "${GEN}" == "GENIE" ]] ); then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "For MiniBooNE CCQE(-like) samples when using NEUT or GENIE you "
    echo -n "need to specify an input vector containing events generated with "
    echo -n "the muon anti-neutrino contamination in the neutrino mode beam. "
    echo -n "Where does it live? /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_JOINT_PREFIX="#"
  else
    MB_NUMUB_IN_NUMU_FILELOC=${VECT_LOC}
    NUMU_JOINT_PREFIX=""
  fi
  INP_VECT_COMMAND="${GEN_TAG}(${MB_NUMU_FILELOC},${MB_NUMUB_IN_NUMU_FILELOC})"
elif [[ "${MB_NUMU_FILELOC}" != "_MB_NUMU_INPUT_FILE_" ]] && ( [[ "${GEN}" == "NUWRO" ]] || [[ "${GEN}" == "GIBUU" ]] ); then
  NUMU_JOINT_PREFIX=""
fi

echo "${NUMU_JOINT_PREFIX}${QEL_PREFIX}sample MiniBooNE_CCQE_XSec_1DQ2_nu ${INP_VECT_COMMAND}" >> ${OUTPUTCARDFILE}
echo "${NUMU_JOINT_PREFIX}${QEL_PREFIX}sample MiniBooNE_CCQELike_XSec_1DQ2_nu ${INP_VECT_COMMAND}" >> ${OUTPUTCARDFILE}
echo "${NUMU_JOINT_PREFIX}${QEL_PREFIX}sample MiniBooNE_CCQE_XSec_2DTcos_nu ${INP_VECT_COMMAND}" >> ${OUTPUTCARDFILE}
echo "${NUMU_JOINT_PREFIX}${QEL_PREFIX}sample MiniBooNE_CCQELike_XSec_2DTcos_nu ${INP_VECT_COMMAND}" >> ${OUTPUTCARDFILE}


MB_NUMUB_FILELOC="_MB_NUMUB_INPUT_FILE_"
NUMUB_PREFIX="#"
if [[ "${DO_NUCLEAR}" == "1" ]] && [[ "${DO_NUB}" == "1" ]] && ( [[ "${DO_QEL}" == "1" ]] || [[ "${DO_PIPROD}" == "1" ]] ); then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the MiniBooNE muon anti-neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMUB_PREFIX="#"
  else
    MB_NUMUB_FILELOC=${VECT_LOC}
    NUMUB_PREFIX=""
  fi
fi

echo -e "\n## numubar\n" >> ${OUTPUTCARDFILE}

INP_VECT_COMMAND="${GEN_TAG}${MB_NUMUB_FILELOC}"
MB_NUMU_IN_NUMUB_FILELOC="_MB_NUMU_IN_NUMUB_INPUT_FILE_"
NUMUB_JOINT_PREFIX="#"
if [[ "${MB_NUMUB_FILELOC}" != "_MB_NUMUB_INPUT_FILE_" ]] && ( [[ "${GEN}" == "NEUT" ]] || [[ "${GEN}" == "GENIE" ]] ); then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "For MiniBooNE CCQE(-like) samples when using NEUT or GENIE you "
    echo -n "need to specify an input vector containing events generated with "
    echo -n "the muon neutrino contamination in the anti-neutrino mode beam. "
    echo -n "Where does it live? /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMUB_JOINT_PREFIX="#"
  else
    MB_NUMU_IN_NUMUB_FILELOC=${VECT_LOC}
    NUMUB_JOINT_PREFIX=""
  fi
  INP_VECT_COMMAND="${GEN_TAG}(${MB_NUMUB_FILELOC},${MB_NUMU_IN_NUMUB_FILELOC})"
elif [[ "${MB_NUMUB_FILELOC}" != "_MB_NUMUB_INPUT_FILE_" ]] && ( [[ "${GEN}" == "NUWRO" ]] || [[ "${GEN}" == "GIBUU" ]] ); then
  NUMUB_JOINT_PREFIX=""
fi

echo "${NUMUB_JOINT_PREFIX}${QEL_PREFIX}sample MiniBooNE_CCQE_XSec_1DQ2_antinu ${INP_VECT_COMMAND}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_JOINT_PREFIX}${QEL_PREFIX}sample MiniBooNE_CCQELike_XSec_1DQ2_antinu ${INP_VECT_COMMAND}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_JOINT_PREFIX}${QEL_PREFIX}sample MiniBooNE_CCQE_XSec_2DTcos_antinu ${INP_VECT_COMMAND}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_JOINT_PREFIX}${QEL_PREFIX}sample MiniBooNE_CCQELike_XSec_2DTcos_antinu ${INP_VECT_COMMAND}" >> ${OUTPUTCARDFILE}

echo -e "\n### CC1Pi\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pip_XSec_1DEnu_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pip_XSec_1DQ2_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pip_XSec_1DTpi_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pip_XSec_1DTu_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pip_XSec_2DQ2Enu_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pip_XSec_2DTpiCospi_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pip_XSec_2DTpiEnu_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pip_XSec_2DTuCosmu_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pip_XSec_2DTuEnu_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pi0_XSec_1DEnu_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pi0_XSec_1DQ2_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pi0_XSec_1DTu_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pi0_XSec_1Dcosmu_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pi0_XSec_1Dcospi0_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MiniBooNE_CC1pi0_XSec_1Dppi0_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

echo -e "\n### NCEL\n" >> ${OUTPUTCARDFILE}

echo "#{NUMU_PREFIX}${QEL_PREFIX}${NC_PREFIX}sample MiniBooNE_NCEL_XSec_Treco_nu ${GEN_TAG}${MB_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}




MIN_NUMU_FILELOC="_MIN_NUMU_INPUT_FILE_"
NUMU_PREFIX="#"
if [[ "${DO_NUCLEAR}" == "1" ]] && [[ "${DO_NU}" == "1" ]] && ( [[ "${DO_QEL}" == "1" ]] || [[ "${DO_PIPROD}" == "1" ]] || [[ "${DO_CCINC}" == "1" ]] ); then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the MINERvA muon neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_PREFIX="#"
  else
    MIN_NUMU_FILELOC=${VECT_LOC}
    NUMU_PREFIX=""
  fi
fi

echo -e "\n#### MINERvA" >> ${OUTPUTCARDFILE}
echo "### QE-like" >> ${OUTPUTCARDFILE}
echo -e "## numu\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${QEL_PREFIX}sample MINERvA_CCQE_XSec_1DQ2_nu ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${QEL_PREFIX}sample MINERvA_CCQE_XSec_1DQ2_nu_20deg ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${QEL_PREFIX}${OLD_PREFIX}sample MINERvA_CCQE_XSec_1DQ2_nu_oldflux ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${QEL_PREFIX}${OLD_PREFIX}sample MINERvA_CCQE_XSec_1DQ2_nu_20deg_oldflux ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${QEL_PREFIX}sample MINERvA_CC0pi_XSec_1DQ2_nu_proton ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

echo -e "\n## nue\n" >> ${OUTPUTCARDFILE}
NUE_PREFIX="#"
echo "${NUE_PREFIX}${QEL_PREFIX}sample MINERvA_CC0pi_XSec_1DEe_nue ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUE_PREFIX}${QEL_PREFIX}sample MINERvA_CC0pi_XSec_1DQ2_nue ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUE_PREFIX}${QEL_PREFIX}sample MINERvA_CC0pi_XSec_1DThetae_nue ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}


MIN_NUMUB_FILELOC="_MIN_NUMUB_INPUT_FILE_"
NUMUB_PREFIX="#"
if [[ "${DO_NUCLEAR}" == "1" ]] && [[ "${DO_NUB}" == "1" ]] && ( [[ "${DO_QEL}" == "1" ]] || [[ "${DO_PIPROD}" == "1" ]] ); then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the MINERvA muon anti-neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMUB_PREFIX="#"
  else
    MIN_NUMUB_FILELOC=${VECT_LOC}
    NUMUB_PREFIX=""
  fi
fi

echo -e "\n## numubar\n" >> ${OUTPUTCARDFILE}

echo "${NUMUB_PREFIX}${QEL_PREFIX}sample MINERvA_CCQE_XSec_1DQ2_antinu ${GEN_TAG}${MIN_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_PREFIX}${QEL_PREFIX}sample MINERvA_CCQE_XSec_1DQ2_antinu_20deg ${GEN_TAG}${MIN_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_PREFIX}${QEL_PREFIX}${OLD_PREFIX}sample MINERvA_CCQE_XSec_1DQ2_antinu_oldflux ${GEN_TAG}${MIN_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_PREFIX}${QEL_PREFIX}${OLD_PREFIX}sample MINERvA_CCQE_XSec_1DQ2_antinu_20deg_oldflux ${GEN_TAG}${MIN_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}

echo -e "\n## numu+numubar\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${NUMUB_PREFIX}${QEL_PREFIX}sample MINERvA_CCQE_XSec_1DQ2_joint ${GEN_TAG}${MIN_NUMUB_FILELOC};${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${NUMUB_PREFIX}${QEL_PREFIX}sample MINERvA_CCQE_XSec_1DQ2_joint_20deg ${GEN_TAG}${MIN_NUMUB_FILELOC};${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${NUMUB_PREFIX}${QEL_PREFIX}${OLD_PREFIX}sample MINERvA_CCQE_XSec_1DQ2_joint_oldflux ${GEN_TAG}${MIN_NUMUB_FILELOC};${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${NUMUB_PREFIX}${QEL_PREFIX}${OLD_PREFIX}sample MINERvA_CCQE_XSec_1DQ2_joint_20deg_oldflux ${GEN_TAG}${MIN_NUMUB_FILELOC};${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

echo -e "\n### CC1Pi" >> ${OUTPUTCARDFILE}
echo -e "## numu\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MINERvA_CC1pip_XSec_1DTpi_nu_20deg ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MINERvA_CC1pip_XSec_1DTpi_nu ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MINERvA_CC1pip_XSec_1Dth_nu_20deg ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MINERvA_CC1pip_XSec_1Dth_nu ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}


echo -e "\n## numubar\n" >> ${OUTPUTCARDFILE}

echo "${NUMUB_PREFIX}${PIPROD_PREFIX}sample MINERvA_CC1pi0_XSec_1Dth_antinu ${GEN_TAG}${MIN_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_PREFIX}${PIPROD_PREFIX}sample MINERvA_CC1pi0_XSec_1Dppi0_antinu_2015 ${GEN_TAG}${MIN_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_PREFIX}${PIPROD_PREFIX}sample MINERvA_CC1pi0_XSec_1DTpi0_antinu_2016 ${GEN_TAG}${MIN_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_PREFIX}${PIPROD_PREFIX}sample MINERvA_CC1pi0_XSec_1DQ2_antinu ${GEN_TAG}${MIN_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_PREFIX}${PIPROD_PREFIX}sample MINERvA_CC1pi0_XSec_1Dthmu_antinu ${GEN_TAG}${MIN_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_PREFIX}${PIPROD_PREFIX}sample MINERvA_CC1pi0_XSec_1Dpmu_antinu ${GEN_TAG}${MIN_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMUB_PREFIX}${PIPROD_PREFIX}sample MINERvA_CC1pi0_XSec_1DEnu_antinu ${GEN_TAG}${MIN_NUMUB_FILELOC}" >> ${OUTPUTCARDFILE}

echo -e "\n### CCNPi" >> ${OUTPUTCARDFILE}
echo -e "#Full phase space\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MINERvA_CCNpip_XSec_1Dth_nu_2016 ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MINERvA_CCNpip_XSec_1DTpi_nu_2016 ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}${OLD_PREFIX}sample MINERvA_CCNpip_XSec_1Dth_nu_2015 ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}${OLD_PREFIX}sample MINERvA_CCNpip_XSec_1DTpi_nu_2015 ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

echo -e "\n#Fiducial\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MINERvA_CCNpip_XSec_1Dth_nu_20deg_2016 ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MINERvA_CCNpip_XSec_1DTpi_nu_20deg_2016 ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}${OLD_PREFIX}sample MINERvA_CCNpip_XSec_1Dth_nu_20deg_2015 ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}${OLD_PREFIX}sample MINERvA_CCNpip_XSec_1DTpi_nu_20deg_2015 ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MINERvA_CCNpip_XSec_1Dthmu_nu ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MINERvA_CCNpip_XSec_1Dpmu_nu ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MINERvA_CCNpip_XSec_1DQ2_nu ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample MINERvA_CCNpip_XSec_1DEnu_nu ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

echo -e "\n### CCInc\n" >> ${OUTPUTCARDFILE}

DO_MINERVA_RATIOS=0
if [[ "${MIN_NUMUB_FILELOC}" != "_MIN_NUMUB_INPUT_FILE_" ]] && [[ "${DO_NUCLEAR}" == "1" ]]; then
  echo -e -n "Are you interested in looking at the MINERvA target ratio samples y/[n]? "
  read MIN_RATIO
  if [[ ! "${MIN_RATIO}" ]]; then
    echo "[INFO]: Assuming No"
    MIN_RATIO="n"
  fi
  parse_bool ${MIN_RATIO}
  DO_MINERVA_RATIOS=${ISTRUE}
fi

MIN_NUMU_FE_FILELOC="_MIN_NUMU_FE_INPUT_FILE_"
NUMU_FE_PREFIX="#"
if [[ "${DO_MINERVA_RATIOS}" == "1" ]] && [[ "${DO_NUCLEAR}" == "1" ]] && [[ "${DO_NU}" == "1" ]] && [[ "${DO_CCINC}" == "1" ]]; then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the MINERvA iron-target muon neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_FE_PREFIX="#"
  else
    MIN_NUMU_FE_FILELOC=${VECT_LOC}
    NUMU_FE_PREFIX=""
  fi
fi

MIN_NUMU_PB_FILELOC="_MIN_NUMU_PB_INPUT_FILE_"
NUMU_PB_PREFIX="#"
if [[ "${DO_MINERVA_RATIOS}" == "1" ]] && [[ "${DO_NUCLEAR}" == "1" ]] && [[ "${DO_NU}" == "1" ]] && [[ "${DO_CCINC}" == "1" ]]; then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the MINERvA lead-target muon neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_PB_PREFIX="#"
  else
    MIN_NUMU_PB_FILELOC=${VECT_LOC}
    NUMU_PB_PREFIX=""
  fi
fi

MIN_NUMU_C_FILELOC="_MIN_NUMU_C_INPUT_FILE_"
NUMU_C_PREFIX="#"
if [[ "${DO_MINERVA_RATIOS}" == "1" ]] && [[ "${DO_NUCLEAR}" == "1" ]] && [[ "${DO_NU}" == "1" ]] && [[ "${DO_CCINC}" == "1" ]]; then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the MINERvA C12-target muon neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}

    ## Issue a warning if a separate C12-target file is not presented.
    if [[ "${VECT_LOC}" == "${MIN_NUMU_FILELOC}" ]]; then
      echo -e -n "[WARNING]: Your C12-target and main CH-target MINERvA input vectors are the same file. This will result in fully correlated uncertainties, would you like to continue? "
      read CONT
      parse_bool ${CONT}
      if [[ "${ISTRUE}" != "1" ]]; then
        FILE_EXISTS=0
      fi
    fi
  done

  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_C_PREFIX="#"
  else
    MIN_NUMU_C_FILELOC=${VECT_LOC}
    NUMU_C_PREFIX=""
  fi
fi

echo "${NUMU_PREFIX}${CCINC_PREFIX}sample MINERvA_CCinc_XSec_2DEavq3_nu ${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

echo -e "\n## Target ratios\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_C_PREFIX}${CCINC_PREFIX}sample MINERvA_CCinc_XSec_1Dx_ratio_C12_CH ${GEN_TAG}${MIN_NUMU_C_FILELOC};${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_FE_PREFIX}${CCINC_PREFIX}sample MINERvA_CCinc_XSec_1Dx_ratio_Fe56_CH ${GEN_TAG}${MIN_NUMU_FE_FILELOC};${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PB_PREFIX}${CCINC_PREFIX}sample MINERvA_CCinc_XSec_1Dx_ratio_Pb208_CH ${GEN_TAG}${MIN_NUMU_PB_FILELOC};${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_C_PREFIX}${CCINC_PREFIX}sample MINERvA_CCinc_XSec_1DEnu_ratio_C12_CH ${GEN_TAG}${MIN_NUMU_C_FILELOC};${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_FE_PREFIX}${CCINC_PREFIX}sample MINERvA_CCinc_XSec_1DEnu_ratio_Fe56_CH ${GEN_TAG}${MIN_NUMU_FE_FILELOC};${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PB_PREFIX}${CCINC_PREFIX}sample MINERvA_CCinc_XSec_1DEnu_ratio_Pb208_CH ${GEN_TAG}${MIN_NUMU_PB_FILELOC};${GEN_TAG}${MIN_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}


T2K_NUMU_FILELOC="_T2K_NUMU_INPUT_FILE_"
NUMU_PREFIX="#"
if [[ "${DO_NUCLEAR}" == "1" ]] && [[ "${DO_NU}" == "1" ]] && ( [[ "${DO_QEL}" == "1" ]] || [[ "${DO_PIPROD}" == "1" ]] ); then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the T2K muon neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_PREFIX="#"
  else
    T2K_NUMU_FILELOC=${VECT_LOC}
    NUMU_PREFIX=""
  fi
fi

echo -e "\n#### T2K" >> ${OUTPUTCARDFILE}
echo -e "### QE-like\n" >> ${OUTPUTCARDFILE}

echo "#${NUMU_PREFIX}${QEL_PREFIX}sample T2K_CC0pi_XSec_2DPcos_nu_I ${GEN_TAG}${T2K_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${QEL_PREFIX}sample T2K_CC0pi_XSec_2DPcos_nu_II ${GEN_TAG}${T2K_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${QEL_PREFIX}sample T2K_CC0pinp_STV_XSec_1Ddpt_nu ${GEN_TAG}${T2K_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

echo -e "\n### CC1Pi\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample T2K_CC1pip_CH_XSec_1Dpmu_nu ${GEN_TAG}${T2K_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample T2K_CC1pip_CH_XSec_1Dppi_nu ${GEN_TAG}${T2K_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample T2K_CC1pip_CH_XSec_1DQ2_nu ${GEN_TAG}${T2K_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample T2K_CC1pip_CH_XSec_1Dq3_nu ${GEN_TAG}${T2K_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample T2K_CC1pip_CH_XSec_1Dthmupi_nu ${GEN_TAG}${T2K_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample T2K_CC1pip_CH_XSec_1Dthpi_nu ${GEN_TAG}${T2K_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample T2K_CC1pip_CH_XSec_1Dthq3pi_nu ${GEN_TAG}${T2K_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}
echo "${NUMU_PREFIX}${PIPROD_PREFIX}sample T2K_CC1pip_CH_XSec_1DWrec_nu ${GEN_TAG}${T2K_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}


K2K_NUMU_FILELOC="_K2K_NUMU_INPUT_FILE_"
NUMU_PREFIX="#"
if [[ "${DO_NUCLEAR}" == "1" ]] && [[ "${DO_NU}" == "1" ]] && [[ "${DO_NC}" == "1" ]] && [[ "${DO_PIPROD}" == "1" ]]; then
  FILE_EXISTS=0
  while [[ ${FILE_EXISTS} == 0 ]]; do
    echo -e -n "Please specify the location of the K2K muon neutrino mode input vector /path/to/file.root (leave blank to ignore this experiment)?\n"
    read -e VECT_LOC
    check_exist ${VECT_LOC}
  done
  if [[ ! "${VECT_LOC}" ]]; then
    NUMU_PREFIX="#"
  else
    K2K_NUMU_FILELOC=${VECT_LOC}
    NUMU_PREFIX=""
  fi
fi

echo -e "\n#### K2K" >> ${OUTPUTCARDFILE}
echo -e "### NCPi\n" >> ${OUTPUTCARDFILE}

echo "${NUMU_PREFIX}${PIPROD_PREFIX}${NC_PREFIX}sample K2K_NC1pi0_Evt_1Dppi0_nu ${GEN_TAG}${T2K_NUMU_FILELOC}" >> ${OUTPUTCARDFILE}

echo "[INFO]: Your card has been written to ${OUTPUTCARDFILE}"
