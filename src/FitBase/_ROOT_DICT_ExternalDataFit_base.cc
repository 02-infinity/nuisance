//
// File generated by rootcint at Fri Jul  8 11:19:47 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIstowelldIt2krepdINIWGdIexternalDataFitterdIsrcdIFitBasedI_ROOT_DICT_ExternalDataFit_base
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "_ROOT_DICT_ExternalDataFit_base.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MeasurementBase MeasurementBase;
      #else
      class MeasurementBase  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~MeasurementBase() throw() {};
         double Enu; //!< Neutrino Energy  
         double EnuMin; //!< Minimum incoming particle energy of events to include
         double EnuMax; //!< Maximum incoming particle energy of events to include
         ::FitEventBase* signal_event; //
         ::FitEvent* cust_event; //
         ::FitWeight* rw_engine; //!< Pointer to the rw engine
         ::InputHandler* input; //!< Instance of the input handler
         string measurementName; //
         int eventType; //
         ::TH1D* fluxHist; //!< Flux Histogram
         ::TH1D* eventHist; //!< Event Histogram
         ::TH1D* xsecHist; //!< XSec Histogram
         double exp_distance; //!< Incoming Particle flight distance (for oscillation analysis)
         double scaleFactor; //!< scaleFactor applied to events to convert from eventrate to final distribution
         double currentNorm; //!< current normalisation factor applied if fit is "FREE"
         bool filledMC; //!< flag whether MC plots have been filled (For ApplyNormalisation)
         double X_VAR; //
         double Y_VAR; //
         double Z_VAR; //
         double Mode; //
         double Weight; //
         bool Signal; //
         int ievt; //
         int nevents; //
         double Enu_rec; //
         double ThetaMu; //
         double CosThetaMu; //
         vector< double > X_VAR_VECT; //
         vector< double > Y_VAR_VECT; //
         vector< double > Z_VAR_VECT; //
         vector< int > MODE_VECT; //
         vector< bool > SIGNAL_VECT; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Measurement1D Measurement1D;
      #else
      class Measurement1D  :  public ::MeasurementBase {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~Measurement1D() throw() {};
         ::TH1D* mcHist_PDG[61]; //
         ::TH1D* dataHist; //!< default data histogram
         ::TH1D* dataOrig; //!< histogram to store original data before throws.
         ::TH1D* dataTrue; //!< histogram to store true dataset
         bool usingfakedata; //!< Flag: whether the current data is actually fake from MC
         string fakeDataFile; //!< Input fake data file
         ::TH1D* mcHist; //!< default MC Histogram used in the chi2 fits
         ::TH1D* mcFine; //!< finely binned MC histogram
         ::TH1D* mcStat; //!< histogram with unweighted events to properly calculate statistical error on MC
         ::TH1I* maskHist; //!< Mask histogram for neglecting specific bins
         string plotTitles; //!< Plot title x and y for the histograms
         ::TMatrixTSym< double >* covar; //!< Inverted Covariance
         ::TMatrixTSym< double >* fullcovar; //!< Full Covariance
         ::TMatrixTSym< double >* decomp; //!< Decomposed Covariance
         ::TMatrixTSym< double >* correl; //!< Correlation Matrix
         ::TMatrixT< double >* smear; //!< Smearing matrix (note, this is not symmetric, and also in general not square)
         double covDet; //!< Determinant of the covariance
         double normError; //!< Sample norm error
         string fitType; //
         double* xBins; //!< xBin edges
         double* data_values; //!< data bin contents
         double* data_errors; //!< data bin errors
         int data_points; //!< number of data points
         bool isShape; //!< Flag: Perform Shape-only fit
         bool isFree; //!< Flag: Perform normalisation free fit
         bool isDiag; //!< Flag: only include uncorrelated diagonal errors
         bool isMask; //!< Flag: Apply bin masking
         bool isRawEvents; //!< Flag: Are bin contents just event rates
         bool isEnu1D; //!< Flag: Perform Flux Unfolded Scaling
         bool isChi2SVD; //!< Flag: Use alternative Chi2 SVD Method (Do not use)
         bool addNormPenalty; //!< Flag: Add a normalisation penalty term to the chi2.
         bool isFix; //!< Flag for keeping norm fixed
         bool isFull; //!< Flag for using full covariaince  
         bool isDifXSec; //!< Flag for creating a dif xsec
         bool isChi2; //!< Flag for using Chi2 over LL methods
         string allowed_types; //!< Fit Types Possible
         string default_types; //!< Starting Default Fit Types
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::JointMeas1D JointMeas1D;
      #else
      class JointMeas1D  :  public ::Measurement1D {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~JointMeas1D() throw() {};
         vector< ::MeasurementBase* > subChain; //!< Vector of experimental classes that are the sub measurements
         vector< ::string > subInFiles; //!< vector of input files for each of the sub measurements.
         bool isRatio; //!< Flag: is this sample a hist1/hist2 ratio sample
         bool isSummed; //!< Flag: is this sample a combination hist1 + hist2
         bool saveSubMeas; //!< Flag: Save each of the histograms from the sub samples as well as this joint samples plots
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Measurement2D Measurement2D;
      #else
      class Measurement2D  :  public ::MeasurementBase {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~Measurement2D() throw() {};
         ::TH2D* dataHist; //!< default data histogram (use in chi2 calculations)
         ::TH2D* dataOrig; //!< histogram to store original data before throws.
         ::TH2D* dataTrue; //!< histogram to store true dataset
         ::TH1D* dataHist_X; //!< Projections onto X of the dataHist
         ::TH1D* dataHist_Y; //!< Projections onto Y of the dataHist
         ::TH2D* mcHist; //!< MC Histogram (used in chi2 calculations)
         ::TH2D* mcFine; //!< Finely binned MC Histogram
         ::TH2D* mcHist_PDG[61]; //!< MC Histograms for each interaction mode
         ::TH1D* mcHist_X; //!< Projections onto X of the mcHist
         ::TH1D* mcHist_Y; //!< Projections onto Y of the mcHist
         string fitType; //
         bool usingfakedata; //!< is current data actually fake
         string fakeDataFile; //!< MC fake data input file
         ::TH2I* maskHist; //!< mask histogram for the data
         ::TH2I* mapHist; //!< map histogram used to convert 2D to 1D distributions
         string plotTitles; //!< X and Y plot titles.
         ::TMatrixTSym< double >* covar; //!< inverted covariance matrix
         ::TMatrixTSym< double >* fullcovar; //!< covariance matrix
         ::TMatrixTSym< double >* decomp; //!< decomposed covariance matrix
         ::TMatrixTSym< double >* correl; //!< correlation matrix
         double covDet; //!< covariance deteriminant
         double normError; //!< Normalisation on the error on the data
         double* xBins; //!< X Bin Edges
         double* yBins; //!< Y Bin Edges
         int data_points_x; //!< Number of X data points
         int data_points_y; //!< NUmber of Y data points
         bool isShape; //!< Flag: Perform shape-only fit
         bool isFree; //!< Flag: Perform normalisation free fit
         bool isDiag; //!< Flag: Only use diagonal bin errors in stats
         bool isMask; //!< Flag: Apply bin masking
         bool isRawEvents; //!< Flag: Only event rates in histograms
         bool isEnu; //
         bool isChi2SVD; //!< Flag: Chi2 SVD Method (DO NOT USE)
         bool addNormPenalty; //!< Flag: Add normalisation penalty to fi
         bool isProjFitX; //!< Flag: Use 1D projections onto X and Y to calculate the Chi2 Method. If flagged X will be used to set the rate.
         bool isProjFitY; //!< Flag: Use 1D projections onto X and Y to calculate the Chi2 Method. If flagged Y will be used to set the rate.
         bool isFix; //!< Flag: Fixed Histogram Norm
         bool isFull; //!< Flag; Use Full Covar
         bool isDifXSec; //!< Flag: Differential XSec
         bool isEnu1D; //!< Flag: Flux Unfolded XSec
         bool isChi2; //!< Flag; Use Chi2 over LL
         string default_types; //!< Default Fit Options
         string allowed_types; //!< Any allowed Fit Options
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void FitParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FitParticle(void *p = 0);
   static void *newArray_FitParticle(Long_t size, void *p);
   static void delete_FitParticle(void *p);
   static void deleteArray_FitParticle(void *p);
   static void destruct_FitParticle(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FitParticle*)
   {
      ::FitParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FitParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FitParticle", ::FitParticle::Class_Version(), "./FitParticle.h", 53,
                  typeid(::FitParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FitParticle::Dictionary, isa_proxy, 4,
                  sizeof(::FitParticle) );
      instance.SetNew(&new_FitParticle);
      instance.SetNewArray(&newArray_FitParticle);
      instance.SetDelete(&delete_FitParticle);
      instance.SetDeleteArray(&deleteArray_FitParticle);
      instance.SetDestructor(&destruct_FitParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FitParticle*)
   {
      return GenerateInitInstanceLocal((::FitParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FitParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FitEventBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FitEventBase(void *p = 0);
   static void *newArray_FitEventBase(Long_t size, void *p);
   static void delete_FitEventBase(void *p);
   static void deleteArray_FitEventBase(void *p);
   static void destruct_FitEventBase(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FitEventBase*)
   {
      ::FitEventBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FitEventBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FitEventBase", ::FitEventBase::Class_Version(), "./FitEventBase.h", 54,
                  typeid(::FitEventBase), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FitEventBase::Dictionary, isa_proxy, 4,
                  sizeof(::FitEventBase) );
      instance.SetNew(&new_FitEventBase);
      instance.SetNewArray(&newArray_FitEventBase);
      instance.SetDelete(&delete_FitEventBase);
      instance.SetDeleteArray(&deleteArray_FitEventBase);
      instance.SetDestructor(&destruct_FitEventBase);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FitEventBase*)
   {
      return GenerateInitInstanceLocal((::FitEventBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FitEventBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FitEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FitEvent(void *p = 0);
   static void *newArray_FitEvent(Long_t size, void *p);
   static void delete_FitEvent(void *p);
   static void deleteArray_FitEvent(void *p);
   static void destruct_FitEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FitEvent*)
   {
      ::FitEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FitEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FitEvent", ::FitEvent::Class_Version(), "./FitEvent.h", 56,
                  typeid(::FitEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FitEvent::Dictionary, isa_proxy, 4,
                  sizeof(::FitEvent) );
      instance.SetNew(&new_FitEvent);
      instance.SetNewArray(&newArray_FitEvent);
      instance.SetDelete(&delete_FitEvent);
      instance.SetDeleteArray(&deleteArray_FitEvent);
      instance.SetDestructor(&destruct_FitEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FitEvent*)
   {
      return GenerateInitInstanceLocal((::FitEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FitEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FitSpline_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FitSpline(void *p = 0);
   static void *newArray_FitSpline(Long_t size, void *p);
   static void delete_FitSpline(void *p);
   static void deleteArray_FitSpline(void *p);
   static void destruct_FitSpline(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FitSpline*)
   {
      ::FitSpline *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FitSpline >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FitSpline", ::FitSpline::Class_Version(), "./FitSpline.h", 32,
                  typeid(::FitSpline), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FitSpline::Dictionary, isa_proxy, 4,
                  sizeof(::FitSpline) );
      instance.SetNew(&new_FitSpline);
      instance.SetNewArray(&newArray_FitSpline);
      instance.SetDelete(&delete_FitSpline);
      instance.SetDeleteArray(&deleteArray_FitSpline);
      instance.SetDestructor(&destruct_FitSpline);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FitSpline*)
   {
      return GenerateInitInstanceLocal((::FitSpline*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FitSpline*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FitSplineHead_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FitSplineHead(void *p = 0);
   static void *newArray_FitSplineHead(Long_t size, void *p);
   static void delete_FitSplineHead(void *p);
   static void deleteArray_FitSplineHead(void *p);
   static void destruct_FitSplineHead(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FitSplineHead*)
   {
      ::FitSplineHead *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FitSplineHead >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FitSplineHead", ::FitSplineHead::Class_Version(), "./FitSplineHead.h", 33,
                  typeid(::FitSplineHead), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FitSplineHead::Dictionary, isa_proxy, 4,
                  sizeof(::FitSplineHead) );
      instance.SetNew(&new_FitSplineHead);
      instance.SetNewArray(&newArray_FitSplineHead);
      instance.SetDelete(&delete_FitSplineHead);
      instance.SetDeleteArray(&deleteArray_FitSplineHead);
      instance.SetDestructor(&destruct_FitSplineHead);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FitSplineHead*)
   {
      return GenerateInitInstanceLocal((::FitSplineHead*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FitSplineHead*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FitWeight_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FitWeight(void *p = 0);
   static void *newArray_FitWeight(Long_t size, void *p);
   static void delete_FitWeight(void *p);
   static void deleteArray_FitWeight(void *p);
   static void destruct_FitWeight(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FitWeight*)
   {
      ::FitWeight *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FitWeight >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FitWeight", ::FitWeight::Class_Version(), "./FitWeight.h", 137,
                  typeid(::FitWeight), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FitWeight::Dictionary, isa_proxy, 4,
                  sizeof(::FitWeight) );
      instance.SetNew(&new_FitWeight);
      instance.SetNewArray(&newArray_FitWeight);
      instance.SetDelete(&delete_FitWeight);
      instance.SetDeleteArray(&deleteArray_FitWeight);
      instance.SetDestructor(&destruct_FitWeight);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FitWeight*)
   {
      return GenerateInitInstanceLocal((::FitWeight*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FitWeight*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace FitBase {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void FitBase_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("FitBase", 0 /*version*/, "./FitWeight.h", 252,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &FitBase_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void FitBase_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void InputHandler_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_InputHandler(void *p = 0);
   static void *newArray_InputHandler(Long_t size, void *p);
   static void delete_InputHandler(void *p);
   static void deleteArray_InputHandler(void *p);
   static void destruct_InputHandler(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::InputHandler*)
   {
      ::InputHandler *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::InputHandler >(0);
      static ::ROOT::TGenericClassInfo 
         instance("InputHandler", ::InputHandler::Class_Version(), "./InputHandler.h", 41,
                  typeid(::InputHandler), ::ROOT::DefineBehavior(ptr, ptr),
                  &::InputHandler::Dictionary, isa_proxy, 4,
                  sizeof(::InputHandler) );
      instance.SetNew(&new_InputHandler);
      instance.SetNewArray(&newArray_InputHandler);
      instance.SetDelete(&delete_InputHandler);
      instance.SetDeleteArray(&deleteArray_InputHandler);
      instance.SetDestructor(&destruct_InputHandler);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::InputHandler*)
   {
      return GenerateInitInstanceLocal((::InputHandler*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::InputHandler*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MeasurementBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MeasurementBase_Dictionary();
   static void delete_MeasurementBase(void *p);
   static void deleteArray_MeasurementBase(void *p);
   static void destruct_MeasurementBase(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MeasurementBase*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MeasurementBase) == sizeof( ::ROOTShadow::Shadow::MeasurementBase));
      ::MeasurementBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MeasurementBase),0);
      static ::ROOT::TGenericClassInfo 
         instance("MeasurementBase", "./MeasurementBase.h", 78,
                  typeid(::MeasurementBase), ::ROOT::DefineBehavior(ptr, ptr),
                  &MeasurementBase_ShowMembers, &MeasurementBase_Dictionary, isa_proxy, 4,
                  sizeof(::MeasurementBase) );
      instance.SetDelete(&delete_MeasurementBase);
      instance.SetDeleteArray(&deleteArray_MeasurementBase);
      instance.SetDestructor(&destruct_MeasurementBase);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MeasurementBase*)
   {
      return GenerateInitInstanceLocal((::MeasurementBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MeasurementBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MeasurementBase_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::MeasurementBase*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Measurement1D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Measurement1D_Dictionary();
   static void *new_Measurement1D(void *p = 0);
   static void *newArray_Measurement1D(Long_t size, void *p);
   static void delete_Measurement1D(void *p);
   static void deleteArray_Measurement1D(void *p);
   static void destruct_Measurement1D(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Measurement1D*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Measurement1D) == sizeof( ::ROOTShadow::Shadow::Measurement1D));
      ::Measurement1D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Measurement1D),0);
      static ::ROOT::TGenericClassInfo 
         instance("Measurement1D", "./Measurement1D.h", 64,
                  typeid(::Measurement1D), ::ROOT::DefineBehavior(ptr, ptr),
                  &Measurement1D_ShowMembers, &Measurement1D_Dictionary, isa_proxy, 4,
                  sizeof(::Measurement1D) );
      instance.SetNew(&new_Measurement1D);
      instance.SetNewArray(&newArray_Measurement1D);
      instance.SetDelete(&delete_Measurement1D);
      instance.SetDeleteArray(&deleteArray_Measurement1D);
      instance.SetDestructor(&destruct_Measurement1D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Measurement1D*)
   {
      return GenerateInitInstanceLocal((::Measurement1D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Measurement1D*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Measurement1D_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Measurement1D*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void JointMeas1D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void JointMeas1D_Dictionary();
   static void *new_JointMeas1D(void *p = 0);
   static void *newArray_JointMeas1D(Long_t size, void *p);
   static void delete_JointMeas1D(void *p);
   static void deleteArray_JointMeas1D(void *p);
   static void destruct_JointMeas1D(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::JointMeas1D*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::JointMeas1D) == sizeof( ::ROOTShadow::Shadow::JointMeas1D));
      ::JointMeas1D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::JointMeas1D),0);
      static ::ROOT::TGenericClassInfo 
         instance("JointMeas1D", "./JointMeas1D.h", 71,
                  typeid(::JointMeas1D), ::ROOT::DefineBehavior(ptr, ptr),
                  &JointMeas1D_ShowMembers, &JointMeas1D_Dictionary, isa_proxy, 4,
                  sizeof(::JointMeas1D) );
      instance.SetNew(&new_JointMeas1D);
      instance.SetNewArray(&newArray_JointMeas1D);
      instance.SetDelete(&delete_JointMeas1D);
      instance.SetDeleteArray(&deleteArray_JointMeas1D);
      instance.SetDestructor(&destruct_JointMeas1D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::JointMeas1D*)
   {
      return GenerateInitInstanceLocal((::JointMeas1D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JointMeas1D*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void JointMeas1D_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::JointMeas1D*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Measurement2D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Measurement2D_Dictionary();
   static void *new_Measurement2D(void *p = 0);
   static void *newArray_Measurement2D(Long_t size, void *p);
   static void delete_Measurement2D(void *p);
   static void deleteArray_Measurement2D(void *p);
   static void destruct_Measurement2D(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Measurement2D*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Measurement2D) == sizeof( ::ROOTShadow::Shadow::Measurement2D));
      ::Measurement2D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Measurement2D),0);
      static ::ROOT::TGenericClassInfo 
         instance("Measurement2D", "./Measurement2D.h", 60,
                  typeid(::Measurement2D), ::ROOT::DefineBehavior(ptr, ptr),
                  &Measurement2D_ShowMembers, &Measurement2D_Dictionary, isa_proxy, 4,
                  sizeof(::Measurement2D) );
      instance.SetNew(&new_Measurement2D);
      instance.SetNewArray(&newArray_Measurement2D);
      instance.SetDelete(&delete_Measurement2D);
      instance.SetDeleteArray(&deleteArray_Measurement2D);
      instance.SetDestructor(&destruct_Measurement2D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Measurement2D*)
   {
      return GenerateInitInstanceLocal((::Measurement2D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Measurement2D*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Measurement2D_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Measurement2D*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr FitParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FitParticle::Class_Name()
{
   return "FitParticle";
}

//______________________________________________________________________________
const char *FitParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FitParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FitParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FitParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FitParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FitParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FitParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FitParticle*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FitEventBase::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FitEventBase::Class_Name()
{
   return "FitEventBase";
}

//______________________________________________________________________________
const char *FitEventBase::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FitEventBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FitEventBase::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FitEventBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FitEventBase::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FitEventBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FitEventBase::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FitEventBase*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FitEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FitEvent::Class_Name()
{
   return "FitEvent";
}

//______________________________________________________________________________
const char *FitEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FitEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FitEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FitEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FitEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FitEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FitEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FitEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FitSpline::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FitSpline::Class_Name()
{
   return "FitSpline";
}

//______________________________________________________________________________
const char *FitSpline::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FitSpline*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FitSpline::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FitSpline*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FitSpline::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FitSpline*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FitSpline::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FitSpline*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FitSplineHead::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FitSplineHead::Class_Name()
{
   return "FitSplineHead";
}

//______________________________________________________________________________
const char *FitSplineHead::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FitSplineHead*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FitSplineHead::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FitSplineHead*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FitSplineHead::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FitSplineHead*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FitSplineHead::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FitSplineHead*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FitWeight::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FitWeight::Class_Name()
{
   return "FitWeight";
}

//______________________________________________________________________________
const char *FitWeight::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FitWeight*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FitWeight::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FitWeight*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FitWeight::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FitWeight*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FitWeight::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FitWeight*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr InputHandler::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *InputHandler::Class_Name()
{
   return "InputHandler";
}

//______________________________________________________________________________
const char *InputHandler::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::InputHandler*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int InputHandler::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::InputHandler*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void InputHandler::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::InputHandler*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *InputHandler::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::InputHandler*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void FitParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class FitParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FitParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(FitParticle::Class(),this);
   }
}

//______________________________________________________________________________
void FitParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FitParticle.
      TClass *R__cl = ::FitParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP", &fP);
      R__insp.InspectMember(fP, "fP.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPID", &fPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsAlive", &fIsAlive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMass", &fMass);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FitParticle(void *p) {
      return  p ? new(p) ::FitParticle : new ::FitParticle;
   }
   static void *newArray_FitParticle(Long_t nElements, void *p) {
      return p ? new(p) ::FitParticle[nElements] : new ::FitParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_FitParticle(void *p) {
      delete ((::FitParticle*)p);
   }
   static void deleteArray_FitParticle(void *p) {
      delete [] ((::FitParticle*)p);
   }
   static void destruct_FitParticle(void *p) {
      typedef ::FitParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FitParticle

//______________________________________________________________________________
void FitEventBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class FitEventBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FitEventBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(FitEventBase::Class(),this);
   }
}

//______________________________________________________________________________
void FitEventBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FitEventBase.
      TClass *R__cl = ::FitEventBase::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X_VAR", &X_VAR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Y_VAR", &Y_VAR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Z_VAR", &Z_VAR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mode", &Mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Weight", &Weight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Signal", &Signal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Index", &Index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BinIndex", &BinIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dial_coeff", &dial_coeff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*neut_event", &neut_event);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FitEventBase(void *p) {
      return  p ? new(p) ::FitEventBase : new ::FitEventBase;
   }
   static void *newArray_FitEventBase(Long_t nElements, void *p) {
      return p ? new(p) ::FitEventBase[nElements] : new ::FitEventBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_FitEventBase(void *p) {
      delete ((::FitEventBase*)p);
   }
   static void deleteArray_FitEventBase(void *p) {
      delete [] ((::FitEventBase*)p);
   }
   static void destruct_FitEventBase(void *p) {
      typedef ::FitEventBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FitEventBase

//______________________________________________________________________________
void FitEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class FitEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FitEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(FitEvent::Class(),this);
   }
}

//______________________________________________________________________________
void FitEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FitEvent.
      TClass *R__cl = ::FitEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNo", &fEventNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNParticles", &fNParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFSIParticles", &fNFSIParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNIncomingParticles", &fNIncomingParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFinalParticles", &fNFinalParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrPartIndex", &fCurrPartIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fit_particle", &fit_particle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "all_particles", (void*)&all_particles);
      R__insp.InspectMember("vector<FitParticle>", (void*)&all_particles, "all_particles.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotCrs", &TotCrs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PFSurf", &PFSurf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PFMax", &PFMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TargetA", &TargetA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TargetZ", &TargetZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TargetH", &TargetH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ibound", &Ibound);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nparticles", &Nparticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nprimary", &Nprimary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "weight", &weight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FlightDistance", &FlightDistance);
      FitEventBase::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FitEvent(void *p) {
      return  p ? new(p) ::FitEvent : new ::FitEvent;
   }
   static void *newArray_FitEvent(Long_t nElements, void *p) {
      return p ? new(p) ::FitEvent[nElements] : new ::FitEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_FitEvent(void *p) {
      delete ((::FitEvent*)p);
   }
   static void deleteArray_FitEvent(void *p) {
      delete [] ((::FitEvent*)p);
   }
   static void destruct_FitEvent(void *p) {
      typedef ::FitEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FitEvent

//______________________________________________________________________________
void FitWeight::Streamer(TBuffer &R__b)
{
   // Stream an object of class FitWeight.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FitWeight::Class(),this);
   } else {
      R__b.WriteClassBuffer(FitWeight::Class(),this);
   }
}

//______________________________________________________________________________
void FitWeight::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FitWeight.
      TClass *R__cl = ::FitWeight::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*neut_rw", &neut_rw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*niwg_rw", &niwg_rw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t2k_rw", &t2k_rw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t2k_neutrw", &t2k_neutrw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t2k_niwgrw", &t2k_niwgrw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "norm_enum", &norm_enum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dial_names", (void*)&dial_names);
      R__insp.InspectMember("vector<std::string>", (void*)&dial_names, "dial_names.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dial_enums", (void*)&dial_enums);
      R__insp.InspectMember("vector<int>", (void*)&dial_enums, "dial_enums.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dial_values", (void*)&dial_values);
      R__insp.InspectMember("vector<double>", (void*)&dial_values, "dial_values.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dial_func", (void*)&dial_func);
      R__insp.InspectMember("vector<TF1>", (void*)&dial_func, "dial_func.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dial_units", (void*)&dial_units);
      R__insp.InspectMember("vector<std::string>", (void*)&dial_units, "dial_units.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rw_name", (void*)&rw_name);
      R__insp.InspectMember("string", (void*)&rw_name, "rw_name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dial_changed", &dial_changed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "using_neut", &using_neut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "using_genie", &using_genie);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "using_niwg", &using_niwg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "using_t2k", &using_t2k);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "using_nuwro", &using_nuwro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neut_changed", &neut_changed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genie_changed", &genie_changed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "niwg_changed", &niwg_changed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nuwro_changed", &nuwro_changed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t2k_changed", &t2k_changed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*spline_head", &spline_head);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FitWeight(void *p) {
      return  p ? new(p) ::FitWeight : new ::FitWeight;
   }
   static void *newArray_FitWeight(Long_t nElements, void *p) {
      return p ? new(p) ::FitWeight[nElements] : new ::FitWeight[nElements];
   }
   // Wrapper around operator delete
   static void delete_FitWeight(void *p) {
      delete ((::FitWeight*)p);
   }
   static void deleteArray_FitWeight(void *p) {
      delete [] ((::FitWeight*)p);
   }
   static void destruct_FitWeight(void *p) {
      typedef ::FitWeight current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FitWeight

//______________________________________________________________________________
void FitSplineHead::Streamer(TBuffer &R__b)
{
   // Stream an object of class FitSplineHead.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FitSplineHead::Class(),this);
   } else {
      R__b.WriteClassBuffer(FitSplineHead::Class(),this);
   }
}

//______________________________________________________________________________
void FitSplineHead::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FitSplineHead.
      TClass *R__cl = ::FitSplineHead::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ngen_events", &ngen_events);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "current_offset", &current_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SplineObjects", (void*)&SplineObjects);
      R__insp.InspectMember("list<FitSpline*>", (void*)&SplineObjects, "SplineObjects.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FitSplineHead(void *p) {
      return  p ? new(p) ::FitSplineHead : new ::FitSplineHead;
   }
   static void *newArray_FitSplineHead(Long_t nElements, void *p) {
      return p ? new(p) ::FitSplineHead[nElements] : new ::FitSplineHead[nElements];
   }
   // Wrapper around operator delete
   static void delete_FitSplineHead(void *p) {
      delete ((::FitSplineHead*)p);
   }
   static void deleteArray_FitSplineHead(void *p) {
      delete [] ((::FitSplineHead*)p);
   }
   static void destruct_FitSplineHead(void *p) {
      typedef ::FitSplineHead current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FitSplineHead

//______________________________________________________________________________
void FitSpline::Streamer(TBuffer &R__b)
{
   // Stream an object of class FitSpline.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FitSpline::Class(),this);
   } else {
      R__b.WriteClassBuffer(FitSpline::Class(),this);
   }
}

//______________________________________________________________________________
void FitSpline::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FitSpline.
      TClass *R__cl = ::FitSpline::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "var_enums", (void*)&var_enums);
      R__insp.InspectMember("vector<int>", (void*)&var_enums, "var_enums.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", (void*)&x);
      R__insp.InspectMember("vector<double>", (void*)&x, "x.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_vals", (void*)&x_vals);
      R__insp.InspectMember("vector<std::vector<double> >", (void*)&x_vals, "x_vals.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_low", (void*)&x_low);
      R__insp.InspectMember("vector<double>", (void*)&x_low, "x_low.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_high", (void*)&x_high);
      R__insp.InspectMember("vector<double>", (void*)&x_high, "x_high.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "needs_fit", &needs_fit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "offset", &offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "npar", &npar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndim", &ndim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "spline", &spline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", (void*)&id);
      R__insp.InspectMember("string", (void*)&id, "id.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "form", (void*)&form);
      R__insp.InspectMember("string", (void*)&form, "form.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "points", (void*)&points);
      R__insp.InspectMember("string", (void*)&points, "points.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FitSpline(void *p) {
      return  p ? new(p) ::FitSpline : new ::FitSpline;
   }
   static void *newArray_FitSpline(Long_t nElements, void *p) {
      return p ? new(p) ::FitSpline[nElements] : new ::FitSpline[nElements];
   }
   // Wrapper around operator delete
   static void delete_FitSpline(void *p) {
      delete ((::FitSpline*)p);
   }
   static void deleteArray_FitSpline(void *p) {
      delete [] ((::FitSpline*)p);
   }
   static void destruct_FitSpline(void *p) {
      typedef ::FitSpline current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FitSpline

//______________________________________________________________________________
void InputHandler::Streamer(TBuffer &R__b)
{
   // Stream an object of class InputHandler.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(InputHandler::Class(),this);
   } else {
      R__b.WriteClassBuffer(InputHandler::Class(),this);
   }
}

//______________________________________________________________________________
void InputHandler::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class InputHandler.
      TClass *R__cl = ::InputHandler::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventType", &eventType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tn", &tn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*signal_event", &signal_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cust_event", &cust_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*splhead", &splhead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxEvents", &maxEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEvents", &nEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "curevt_i", &curevt_i);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fluxHist", &fluxHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eventHist", &eventHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*xsecHist", &xsecHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inRootFile", &inRootFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inFile", (void*)&inFile);
      R__insp.InspectMember("string", (void*)&inFile, "inFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inType", (void*)&inType);
      R__insp.InspectMember("string", (void*)&inType, "inType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "signal_events", (void*)&signal_events);
      R__insp.InspectMember("vector<FitEventBase*>", (void*)&signal_events, "signal_events.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "handleName", (void*)&handleName);
      R__insp.InspectMember("string", (void*)&handleName, "handleName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*neut_event", &neut_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "joint_index_low", (void*)&joint_index_low);
      R__insp.InspectMember("vector<int>", (void*)&joint_index_low, "joint_index_low.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "joint_index_high", (void*)&joint_index_high);
      R__insp.InspectMember("vector<int>", (void*)&joint_index_high, "joint_index_high.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "joint_index_hist", (void*)&joint_index_hist);
      R__insp.InspectMember("vector<TH1D*>", (void*)&joint_index_hist, "joint_index_hist.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isJointInput", &isJointInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cur_entry", &cur_entry);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_InputHandler(void *p) {
      return  p ? new(p) ::InputHandler : new ::InputHandler;
   }
   static void *newArray_InputHandler(Long_t nElements, void *p) {
      return p ? new(p) ::InputHandler[nElements] : new ::InputHandler[nElements];
   }
   // Wrapper around operator delete
   static void delete_InputHandler(void *p) {
      delete ((::InputHandler*)p);
   }
   static void deleteArray_InputHandler(void *p) {
      delete [] ((::InputHandler*)p);
   }
   static void destruct_InputHandler(void *p) {
      typedef ::InputHandler current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::InputHandler

//______________________________________________________________________________
namespace ROOTDict {
   void MeasurementBase_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MeasurementBase.
      typedef ::ROOTShadow::Shadow::MeasurementBase ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::MeasurementBase*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Enu", &sobj->Enu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnuMin", &sobj->EnuMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnuMax", &sobj->EnuMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*signal_event", &sobj->signal_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cust_event", &sobj->cust_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rw_engine", &sobj->rw_engine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*input", &sobj->input);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "measurementName", (void*)&sobj->measurementName);
      R__insp.InspectMember("string", (void*)&sobj->measurementName, "measurementName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventType", &sobj->eventType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fluxHist", &sobj->fluxHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eventHist", &sobj->eventHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*xsecHist", &sobj->xsecHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "exp_distance", &sobj->exp_distance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scaleFactor", &sobj->scaleFactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "currentNorm", &sobj->currentNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "filledMC", &sobj->filledMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X_VAR", &sobj->X_VAR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Y_VAR", &sobj->Y_VAR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Z_VAR", &sobj->Z_VAR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mode", &sobj->Mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Weight", &sobj->Weight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Signal", &sobj->Signal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ievt", &sobj->ievt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nevents", &sobj->nevents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Enu_rec", &sobj->Enu_rec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ThetaMu", &sobj->ThetaMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CosThetaMu", &sobj->CosThetaMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X_VAR_VECT", (void*)&sobj->X_VAR_VECT);
      R__insp.InspectMember("vector<double>", (void*)&sobj->X_VAR_VECT, "X_VAR_VECT.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Y_VAR_VECT", (void*)&sobj->Y_VAR_VECT);
      R__insp.InspectMember("vector<double>", (void*)&sobj->Y_VAR_VECT, "Y_VAR_VECT.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Z_VAR_VECT", (void*)&sobj->Z_VAR_VECT);
      R__insp.InspectMember("vector<double>", (void*)&sobj->Z_VAR_VECT, "Z_VAR_VECT.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MODE_VECT", (void*)&sobj->MODE_VECT);
      R__insp.InspectMember("vector<int>", (void*)&sobj->MODE_VECT, "MODE_VECT.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SIGNAL_VECT", (void*)&sobj->SIGNAL_VECT);
      R__insp.InspectMember("vector<bool>", (void*)&sobj->SIGNAL_VECT, "SIGNAL_VECT.", false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MeasurementBase(void *p) {
      delete ((::MeasurementBase*)p);
   }
   static void deleteArray_MeasurementBase(void *p) {
      delete [] ((::MeasurementBase*)p);
   }
   static void destruct_MeasurementBase(void *p) {
      typedef ::MeasurementBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MeasurementBase

//______________________________________________________________________________
namespace ROOTDict {
   void Measurement1D_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Measurement1D.
      typedef ::ROOTShadow::Shadow::Measurement1D ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Measurement1D*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcHist_PDG[61]", &sobj->mcHist_PDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dataHist", &sobj->dataHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dataOrig", &sobj->dataOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dataTrue", &sobj->dataTrue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "usingfakedata", &sobj->usingfakedata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fakeDataFile", (void*)&sobj->fakeDataFile);
      R__insp.InspectMember("string", (void*)&sobj->fakeDataFile, "fakeDataFile.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcHist", &sobj->mcHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcFine", &sobj->mcFine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcStat", &sobj->mcStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*maskHist", &sobj->maskHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plotTitles", (void*)&sobj->plotTitles);
      R__insp.InspectMember("string", (void*)&sobj->plotTitles, "plotTitles.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*covar", &sobj->covar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fullcovar", &sobj->fullcovar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*decomp", &sobj->decomp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*correl", &sobj->correl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*smear", &sobj->smear);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "covDet", &sobj->covDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "normError", &sobj->normError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fitType", (void*)&sobj->fitType);
      R__insp.InspectMember("string", (void*)&sobj->fitType, "fitType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*xBins", &sobj->xBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*data_values", &sobj->data_values);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*data_errors", &sobj->data_errors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data_points", &sobj->data_points);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isShape", &sobj->isShape);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFree", &sobj->isFree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDiag", &sobj->isDiag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isMask", &sobj->isMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isRawEvents", &sobj->isRawEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isEnu1D", &sobj->isEnu1D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isChi2SVD", &sobj->isChi2SVD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "addNormPenalty", &sobj->addNormPenalty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFix", &sobj->isFix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFull", &sobj->isFull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDifXSec", &sobj->isDifXSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isChi2", &sobj->isChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "allowed_types", (void*)&sobj->allowed_types);
      R__insp.InspectMember("string", (void*)&sobj->allowed_types, "allowed_types.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "default_types", (void*)&sobj->default_types);
      R__insp.InspectMember("string", (void*)&sobj->default_types, "default_types.", true);
      R__insp.GenericShowMembers("MeasurementBase", ( ::MeasurementBase * )( (::Measurement1D*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Measurement1D(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Measurement1D : new ::Measurement1D;
   }
   static void *newArray_Measurement1D(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Measurement1D[nElements] : new ::Measurement1D[nElements];
   }
   // Wrapper around operator delete
   static void delete_Measurement1D(void *p) {
      delete ((::Measurement1D*)p);
   }
   static void deleteArray_Measurement1D(void *p) {
      delete [] ((::Measurement1D*)p);
   }
   static void destruct_Measurement1D(void *p) {
      typedef ::Measurement1D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Measurement1D

//______________________________________________________________________________
namespace ROOTDict {
   void Measurement2D_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Measurement2D.
      typedef ::ROOTShadow::Shadow::Measurement2D ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Measurement2D*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dataHist", &sobj->dataHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dataOrig", &sobj->dataOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dataTrue", &sobj->dataTrue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dataHist_X", &sobj->dataHist_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dataHist_Y", &sobj->dataHist_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcHist", &sobj->mcHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcFine", &sobj->mcFine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcHist_PDG[61]", &sobj->mcHist_PDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcHist_X", &sobj->mcHist_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcHist_Y", &sobj->mcHist_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fitType", (void*)&sobj->fitType);
      R__insp.InspectMember("string", (void*)&sobj->fitType, "fitType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "usingfakedata", &sobj->usingfakedata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fakeDataFile", (void*)&sobj->fakeDataFile);
      R__insp.InspectMember("string", (void*)&sobj->fakeDataFile, "fakeDataFile.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*maskHist", &sobj->maskHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mapHist", &sobj->mapHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plotTitles", (void*)&sobj->plotTitles);
      R__insp.InspectMember("string", (void*)&sobj->plotTitles, "plotTitles.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*covar", &sobj->covar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fullcovar", &sobj->fullcovar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*decomp", &sobj->decomp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*correl", &sobj->correl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "covDet", &sobj->covDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "normError", &sobj->normError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*xBins", &sobj->xBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*yBins", &sobj->yBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data_points_x", &sobj->data_points_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data_points_y", &sobj->data_points_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isShape", &sobj->isShape);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFree", &sobj->isFree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDiag", &sobj->isDiag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isMask", &sobj->isMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isRawEvents", &sobj->isRawEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isEnu", &sobj->isEnu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isChi2SVD", &sobj->isChi2SVD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "addNormPenalty", &sobj->addNormPenalty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isProjFitX", &sobj->isProjFitX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isProjFitY", &sobj->isProjFitY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFix", &sobj->isFix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFull", &sobj->isFull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDifXSec", &sobj->isDifXSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isEnu1D", &sobj->isEnu1D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isChi2", &sobj->isChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "default_types", (void*)&sobj->default_types);
      R__insp.InspectMember("string", (void*)&sobj->default_types, "default_types.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "allowed_types", (void*)&sobj->allowed_types);
      R__insp.InspectMember("string", (void*)&sobj->allowed_types, "allowed_types.", true);
      R__insp.GenericShowMembers("MeasurementBase", ( ::MeasurementBase * )( (::Measurement2D*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Measurement2D(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Measurement2D : new ::Measurement2D;
   }
   static void *newArray_Measurement2D(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Measurement2D[nElements] : new ::Measurement2D[nElements];
   }
   // Wrapper around operator delete
   static void delete_Measurement2D(void *p) {
      delete ((::Measurement2D*)p);
   }
   static void deleteArray_Measurement2D(void *p) {
      delete [] ((::Measurement2D*)p);
   }
   static void destruct_Measurement2D(void *p) {
      typedef ::Measurement2D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Measurement2D

//______________________________________________________________________________
namespace ROOTDict {
   void JointMeas1D_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class JointMeas1D.
      typedef ::ROOTShadow::Shadow::JointMeas1D ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::JointMeas1D*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subChain", (void*)&sobj->subChain);
      R__insp.InspectMember("vector<MeasurementBase*>", (void*)&sobj->subChain, "subChain.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subInFiles", (void*)&sobj->subInFiles);
      R__insp.InspectMember("vector<std::string>", (void*)&sobj->subInFiles, "subInFiles.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isRatio", &sobj->isRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isSummed", &sobj->isSummed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "saveSubMeas", &sobj->saveSubMeas);
      R__insp.GenericShowMembers("Measurement1D", ( ::Measurement1D * )( (::JointMeas1D*) obj ), false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_JointMeas1D(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::JointMeas1D : new ::JointMeas1D;
   }
   static void *newArray_JointMeas1D(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::JointMeas1D[nElements] : new ::JointMeas1D[nElements];
   }
   // Wrapper around operator delete
   static void delete_JointMeas1D(void *p) {
      delete ((::JointMeas1D*)p);
   }
   static void deleteArray_JointMeas1D(void *p) {
      delete [] ((::JointMeas1D*)p);
   }
   static void destruct_JointMeas1D(void *p) {
      typedef ::JointMeas1D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::JointMeas1D

namespace ROOTDict {
   void listlEFitSplinemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void listlEFitSplinemUgR_Dictionary();
   static void *new_listlEFitSplinemUgR(void *p = 0);
   static void *newArray_listlEFitSplinemUgR(Long_t size, void *p);
   static void delete_listlEFitSplinemUgR(void *p);
   static void deleteArray_listlEFitSplinemUgR(void *p);
   static void destruct_listlEFitSplinemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const list<FitSpline*>*)
   {
      list<FitSpline*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<FitSpline*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<FitSpline*>", -2, "prec_stl/list", 44,
                  typeid(list<FitSpline*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &listlEFitSplinemUgR_Dictionary, isa_proxy, 0,
                  sizeof(list<FitSpline*>) );
      instance.SetNew(&new_listlEFitSplinemUgR);
      instance.SetNewArray(&newArray_listlEFitSplinemUgR);
      instance.SetDelete(&delete_listlEFitSplinemUgR);
      instance.SetDeleteArray(&deleteArray_listlEFitSplinemUgR);
      instance.SetDestructor(&destruct_listlEFitSplinemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< list<FitSpline*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<FitSpline*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlEFitSplinemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const list<FitSpline*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_listlEFitSplinemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<FitSpline*> : new list<FitSpline*>;
   }
   static void *newArray_listlEFitSplinemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<FitSpline*>[nElements] : new list<FitSpline*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlEFitSplinemUgR(void *p) {
      delete ((list<FitSpline*>*)p);
   }
   static void deleteArray_listlEFitSplinemUgR(void *p) {
      delete [] ((list<FitSpline*>*)p);
   }
   static void destruct_listlEFitSplinemUgR(void *p) {
      typedef list<FitSpline*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class list<FitSpline*>

namespace ROOTDict {
   void vectorlEFitEventBasemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEFitEventBasemUgR_Dictionary();
   static void *new_vectorlEFitEventBasemUgR(void *p = 0);
   static void *newArray_vectorlEFitEventBasemUgR(Long_t size, void *p);
   static void delete_vectorlEFitEventBasemUgR(void *p);
   static void deleteArray_vectorlEFitEventBasemUgR(void *p);
   static void destruct_vectorlEFitEventBasemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<FitEventBase*>*)
   {
      vector<FitEventBase*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<FitEventBase*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<FitEventBase*>", -2, "prec_stl/vector", 49,
                  typeid(vector<FitEventBase*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEFitEventBasemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<FitEventBase*>) );
      instance.SetNew(&new_vectorlEFitEventBasemUgR);
      instance.SetNewArray(&newArray_vectorlEFitEventBasemUgR);
      instance.SetDelete(&delete_vectorlEFitEventBasemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEFitEventBasemUgR);
      instance.SetDestructor(&destruct_vectorlEFitEventBasemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<FitEventBase*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<FitEventBase*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEFitEventBasemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<FitEventBase*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEFitEventBasemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<FitEventBase*> : new vector<FitEventBase*>;
   }
   static void *newArray_vectorlEFitEventBasemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<FitEventBase*>[nElements] : new vector<FitEventBase*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEFitEventBasemUgR(void *p) {
      delete ((vector<FitEventBase*>*)p);
   }
   static void deleteArray_vectorlEFitEventBasemUgR(void *p) {
      delete [] ((vector<FitEventBase*>*)p);
   }
   static void destruct_vectorlEFitEventBasemUgR(void *p) {
      typedef vector<FitEventBase*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<FitEventBase*>

namespace ROOTDict {
   void vectorlETF1gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETF1gR_Dictionary();
   static void *new_vectorlETF1gR(void *p = 0);
   static void *newArray_vectorlETF1gR(Long_t size, void *p);
   static void delete_vectorlETF1gR(void *p);
   static void deleteArray_vectorlETF1gR(void *p);
   static void destruct_vectorlETF1gR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TF1>*)
   {
      vector<TF1> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TF1>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TF1>", -2, "prec_stl/vector", 49,
                  typeid(vector<TF1>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETF1gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TF1>) );
      instance.SetNew(&new_vectorlETF1gR);
      instance.SetNewArray(&newArray_vectorlETF1gR);
      instance.SetDelete(&delete_vectorlETF1gR);
      instance.SetDeleteArray(&deleteArray_vectorlETF1gR);
      instance.SetDestructor(&destruct_vectorlETF1gR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TF1> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TF1>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETF1gR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TF1>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETF1gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TF1> : new vector<TF1>;
   }
   static void *newArray_vectorlETF1gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TF1>[nElements] : new vector<TF1>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETF1gR(void *p) {
      delete ((vector<TF1>*)p);
   }
   static void deleteArray_vectorlETF1gR(void *p) {
      delete [] ((vector<TF1>*)p);
   }
   static void destruct_vectorlETF1gR(void *p) {
      typedef vector<TF1> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TF1>

namespace ROOTDict {
   void vectorlETH1DmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETH1DmUgR_Dictionary();
   static void *new_vectorlETH1DmUgR(void *p = 0);
   static void *newArray_vectorlETH1DmUgR(Long_t size, void *p);
   static void delete_vectorlETH1DmUgR(void *p);
   static void deleteArray_vectorlETH1DmUgR(void *p);
   static void destruct_vectorlETH1DmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TH1D*>*)
   {
      vector<TH1D*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TH1D*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TH1D*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TH1D*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETH1DmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TH1D*>) );
      instance.SetNew(&new_vectorlETH1DmUgR);
      instance.SetNewArray(&newArray_vectorlETH1DmUgR);
      instance.SetDelete(&delete_vectorlETH1DmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETH1DmUgR);
      instance.SetDestructor(&destruct_vectorlETH1DmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TH1D*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TH1D*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETH1DmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TH1D*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETH1DmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH1D*> : new vector<TH1D*>;
   }
   static void *newArray_vectorlETH1DmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH1D*>[nElements] : new vector<TH1D*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETH1DmUgR(void *p) {
      delete ((vector<TH1D*>*)p);
   }
   static void deleteArray_vectorlETH1DmUgR(void *p) {
      delete [] ((vector<TH1D*>*)p);
   }
   static void destruct_vectorlETH1DmUgR(void *p) {
      typedef vector<TH1D*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TH1D*>

namespace ROOTDict {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<bool>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<string>

namespace ROOTDict {
   void vectorlEvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdoublegRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p);
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double> >*)
   {
      vector<vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<double> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdoublegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<double> >) );
      instance.SetNew(&new_vectorlEvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdoublegRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> > : new vector<vector<double> >;
   }
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> >[nElements] : new vector<vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete ((vector<vector<double> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete [] ((vector<vector<double> >*)p);
   }
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p) {
      typedef vector<vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<double> >

/********************************************************
* /home/stowell/t2krep/NIWG/externalDataFitter/src/FitBase/_ROOT_DICT_ExternalDataFit_base.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtable_ROOT_DICT_ExternalDataFit_base();

extern "C" void G__set_cpp_environment_ROOT_DICT_ExternalDataFit_base() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("FitEventBase.h");
  G__add_compiledheader("FitEvent.h");
  G__add_compiledheader("FitParticle.h");
  G__add_compiledheader("FitSpline.h");
  G__add_compiledheader("FitSplineHead.h");
  G__add_compiledheader("FitWeight.h");
  G__add_compiledheader("InputHandler.h");
  G__add_compiledheader("JointMeas1D.h");
  G__add_compiledheader("Measurement1D.h");
  G__add_compiledheader("Measurement2D.h");
  G__add_compiledheader("MeasurementBase.h");
  G__cpp_reset_tagtable_ROOT_DICT_ExternalDataFit_base();
}
#include <new>
extern "C" int G__cpp_dllrev_ROOT_DICT_ExternalDataFit_base() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* FitParticle */
static int G___ROOT_DICT_ExternalDataFit_base_237_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FitParticle[n];
     } else {
       p = new((void*) gvp) FitParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FitParticle;
     } else {
       p = new((void*) gvp) FitParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_237_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FitParticle((NeutPart*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FitParticle((NeutPart*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_237_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FitParticle((UInt_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FitParticle((UInt_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_237_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FitParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_237_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_237_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FitParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_237_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FitParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_237_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_237_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_237_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FitParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_237_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_237_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FitParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_ExternalDataFit_base_237_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FitParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FitParticle(*(FitParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FitParticle G__TFitParticle;
static int G___ROOT_DICT_ExternalDataFit_base_237_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FitParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FitParticle*) (soff+(sizeof(FitParticle)*i)))->~G__TFitParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FitParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FitParticle*) (soff))->~G__TFitParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_ExternalDataFit_base_237_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitParticle* dest = (FitParticle*) G__getstructoffset();
   *dest = *(FitParticle*) libp->para[0].ref;
   const FitParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FitEventBase */
static int G___ROOT_DICT_ExternalDataFit_base_267_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitEventBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FitEventBase[n];
     } else {
       p = new((void*) gvp) FitEventBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FitEventBase;
     } else {
       p = new((void*) gvp) FitEventBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_267_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitEventBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FitEventBase((FitEventBase*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FitEventBase((FitEventBase*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_267_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FitEventBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_267_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitEventBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_267_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FitEventBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_267_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FitEventBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_267_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitEventBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_267_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitEventBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_267_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FitEventBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_267_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitEventBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_267_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FitEventBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_ExternalDataFit_base_267_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FitEventBase* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FitEventBase(*(FitEventBase*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FitEventBase G__TFitEventBase;
static int G___ROOT_DICT_ExternalDataFit_base_267_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FitEventBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FitEventBase*) (soff+(sizeof(FitEventBase)*i)))->~G__TFitEventBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FitEventBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FitEventBase*) (soff))->~G__TFitEventBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_ExternalDataFit_base_267_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitEventBase* dest = (FitEventBase*) G__getstructoffset();
   *dest = *(FitEventBase*) libp->para[0].ref;
   const FitEventBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FitEvent */
static int G___ROOT_DICT_ExternalDataFit_base_268_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FitEvent[n];
     } else {
       p = new((void*) gvp) FitEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FitEvent;
     } else {
       p = new((void*) gvp) FitEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FitEvent((NeutVect*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FitEvent((NeutVect*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitEvent*) G__getstructoffset())->SetEventAddress((NeutVect**) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitEvent*) G__getstructoffset())->NeutKinematics();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitEvent*) G__getstructoffset())->CalcKinematics();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitEvent*) G__getstructoffset())->ResetEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FitEvent*) G__getstructoffset())->PartInfo((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((FitEvent*) G__getstructoffset())->Npart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((FitEvent*) G__getstructoffset())->NFinalpart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FitEvent*) G__getstructoffset())->Enu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FitEvent*) G__getstructoffset())->Tnu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FitEvent*) G__getstructoffset())->Pnu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FitEvent*) G__getstructoffset())->PDGnu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FitEvent*) G__getstructoffset())->Ilep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FitEvent*) G__getstructoffset())->q0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FitEvent*) G__getstructoffset())->q3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FitEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FitEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FitEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FitEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_268_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FitEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_ExternalDataFit_base_268_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FitEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FitEvent(*(FitEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FitEvent G__TFitEvent;
static int G___ROOT_DICT_ExternalDataFit_base_268_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FitEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FitEvent*) (soff+(sizeof(FitEvent)*i)))->~G__TFitEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FitEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FitEvent*) (soff))->~G__TFitEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_ExternalDataFit_base_268_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitEvent* dest = (FitEvent*) G__getstructoffset();
   *dest = *(FitEvent*) libp->para[0].ref;
   const FitEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FitSpline */
static int G___ROOT_DICT_ExternalDataFit_base_801_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitSpline* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FitSpline[n];
     } else {
       p = new((void*) gvp) FitSpline[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FitSpline;
     } else {
       p = new((void*) gvp) FitSpline;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitSpline* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FitSpline(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((vector<int>*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) FitSpline(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((vector<int>*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitSpline*) G__getstructoffset())->ReconfigureSpline(*((vector<int>*) G__int(libp->para[0])), *((vector<double>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FitSpline*) G__getstructoffset())->operator()((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FitSpline*) G__getstructoffset())->DoEval((double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const FitSpline*) G__getstructoffset())->DoEval((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const FitSpline*) G__getstructoffset())->DoEval((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitSpline*) G__getstructoffset())->SetType(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((FitSpline*) G__getstructoffset())->SetType((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((FitSpline*) G__getstructoffset())->SetType((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitSpline*) G__getstructoffset())->SetOffset((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((FitSpline*) G__getstructoffset())->GetSplineCoeff((double*) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FitSpline::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitSpline::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FitSpline::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FitSpline::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitSpline*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitSpline::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FitSpline::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitSpline::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_801_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FitSpline::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_ExternalDataFit_base_801_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FitSpline* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FitSpline(*(FitSpline*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FitSpline G__TFitSpline;
static int G___ROOT_DICT_ExternalDataFit_base_801_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FitSpline*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FitSpline*) (soff+(sizeof(FitSpline)*i)))->~G__TFitSpline();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FitSpline*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FitSpline*) (soff))->~G__TFitSpline();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_ExternalDataFit_base_801_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitSpline* dest = (FitSpline*) G__getstructoffset();
   *dest = *(FitSpline*) libp->para[0].ref;
   const FitSpline& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FitSplineHead */
static int G___ROOT_DICT_ExternalDataFit_base_810_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitSplineHead* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FitSplineHead[n];
     } else {
       p = new((void*) gvp) FitSplineHead[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FitSplineHead;
     } else {
       p = new((void*) gvp) FitSplineHead;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FitSplineHead*) G__getstructoffset())->CalcWeight((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitSplineHead*) G__getstructoffset())->Reconfigure(*((vector<int>*) G__int(libp->para[0])), *((vector<double>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitSplineHead*) G__getstructoffset())->SetupEventWeights((FitEventBase*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitSplineHead*) G__getstructoffset())->AddSpline((FitSpline*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FitSplineHead*) G__getstructoffset())->GetCurrentOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FitSplineHead::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitSplineHead::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FitSplineHead::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FitSplineHead::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitSplineHead*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitSplineHead::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FitSplineHead::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitSplineHead::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_810_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FitSplineHead::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_ExternalDataFit_base_810_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FitSplineHead* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FitSplineHead(*(FitSplineHead*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FitSplineHead G__TFitSplineHead;
static int G___ROOT_DICT_ExternalDataFit_base_810_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FitSplineHead*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FitSplineHead*) (soff+(sizeof(FitSplineHead)*i)))->~G__TFitSplineHead();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FitSplineHead*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FitSplineHead*) (soff))->~G__TFitSplineHead();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_ExternalDataFit_base_810_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitSplineHead* dest = (FitSplineHead*) G__getstructoffset();
   *dest = *(FitSplineHead*) libp->para[0].ref;
   const FitSplineHead& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FitWeight */
static int G___ROOT_DICT_ExternalDataFit_base_1058_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitWeight* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FitWeight(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) FitWeight(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitWeight* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FitWeight(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) FitWeight(*((string*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FitWeight[n];
       } else {
         p = new((void*) gvp) FitWeight[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FitWeight;
       } else {
         p = new((void*) gvp) FitWeight;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((FitWeight*) G__getstructoffset())->GetDialEnum(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((FitWeight*) G__getstructoffset())->GetDialEnum(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FitWeight*) G__getstructoffset())->GetRWEnum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((FitWeight*) G__getstructoffset())->IncludeDial(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((FitWeight*) G__getstructoffset())->IncludeDial(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->SetDialValue(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->SetDialValue((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((FitWeight*) G__getstructoffset())->GetDialValue(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((FitWeight*) G__getstructoffset())->GetDialValue(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FitWeight*) G__getstructoffset())->GetDialValue((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((FitWeight*) G__getstructoffset())->GetDialPos(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((FitWeight*) G__getstructoffset())->GetDialPos((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((FitWeight*) G__getstructoffset())->GetDialType((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FitWeight*) G__getstructoffset())->HasDialChanged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->UpdateWeightEngine((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->SetAllDials((double*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->GetAllDials((double*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((FitWeight*) G__getstructoffset())->GetDialNames();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((FitWeight*) G__getstructoffset())->GetDialEnums();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((FitWeight*) G__getstructoffset())->GetDialValues();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FitWeight*) G__getstructoffset())->GetSampleNorm(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FitWeight*) G__getstructoffset())->CalcWeight((FitEvent*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FitWeight*) G__getstructoffset())->CalcWeight((FitEventBase*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->PrintState();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->Reconfigure();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->SetupNeutRW();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->SetupNIWGRW();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->SetupT2KRW();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FitWeight*) G__getstructoffset())->GetSplineHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->SetupEventCoeff((FitEventBase*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->SetupSpline(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FitWeight*) G__getstructoffset())->CalcSplineWeight((FitEvent*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->ReadSplineHead((FitSplineHead*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->ResetSplines();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((FitWeight*) G__getstructoffset())->GenSplines((FitEventBase*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((FitWeight*) G__getstructoffset())->GenSplines((FitEventBase*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->Fit1DSplineCoeff((FitEventBase*) G__int(libp->para[0]), (FitSpline*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->Fit2DSplineCoeff((FitEventBase*) G__int(libp->para[0]), (FitSpline*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->FitNDSplineCoeff((FitEventBase*) G__int(libp->para[0]), (FitSpline*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FitWeight::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitWeight::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FitWeight::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FitWeight::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FitWeight*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitWeight::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FitWeight::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FitWeight::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1058_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FitWeight::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_ExternalDataFit_base_1058_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FitWeight* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FitWeight(*(FitWeight*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FitWeight G__TFitWeight;
static int G___ROOT_DICT_ExternalDataFit_base_1058_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FitWeight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FitWeight*) (soff+(sizeof(FitWeight)*i)))->~G__TFitWeight();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FitWeight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FitWeight*) (soff))->~G__TFitWeight();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_ExternalDataFit_base_1058_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FitWeight* dest = (FitWeight*) G__getstructoffset();
   *dest = *(FitWeight*) libp->para[0].ref;
   const FitWeight& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FitBase */
static int G___ROOT_DICT_ExternalDataFit_base_1063_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TF1* pobj;
         TF1 xobj = FitBase::GetRWConvFunction(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
         pobj = new TF1(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1063_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = FitBase::GetRWUnits(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1063_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) FitBase::RWSigmaToFrac(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1063_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) FitBase::RWSigmaToAbs(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1063_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) FitBase::RWAbsToSigma(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1063_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) FitBase::RWFracToSigma(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* InputHandler */
static int G___ROOT_DICT_ExternalDataFit_base_1064_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   InputHandler* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new InputHandler[n];
     } else {
       p = new((void*) gvp) InputHandler[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new InputHandler;
     } else {
       p = new((void*) gvp) InputHandler;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   InputHandler* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new InputHandler(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) InputHandler(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((InputHandler*) G__getstructoffset())->ParseInputFile(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InputHandler*) G__getstructoffset())->ReadBinSplineFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InputHandler*) G__getstructoffset())->ReadHistogramFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InputHandler*) G__getstructoffset())->ReadNeutFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InputHandler*) G__getstructoffset())->ReadGenieFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InputHandler*) G__getstructoffset())->ReadNuWroFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InputHandler*) G__getstructoffset())->ReadEventSplineFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InputHandler*) G__getstructoffset())->ReadJointFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((InputHandler*) G__getstructoffset())->GetSplineHead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((InputHandler*) G__getstructoffset())->PredictedEventRate((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *((string*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((InputHandler*) G__getstructoffset())->PredictedEventRate((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((InputHandler*) G__getstructoffset())->TotalIntegratedFlux((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *((string*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((InputHandler*) G__getstructoffset())->TotalIntegratedFlux((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((InputHandler*) G__getstructoffset())->GetEventPointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((InputHandler*) G__getstructoffset())->GetSignalPointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((InputHandler*) G__getstructoffset())->GetNEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((InputHandler*) G__getstructoffset())->GetGenEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InputHandler*) G__getstructoffset())->PrintStartInput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InputHandler*) G__getstructoffset())->ReadEvent((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((InputHandler*) G__getstructoffset())->GetFluxHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((InputHandler*) G__getstructoffset())->GetEventHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((InputHandler*) G__getstructoffset())->GetXSecHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((InputHandler*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((InputHandler*) G__getstructoffset())->CanIGoFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InputHandler*) G__getstructoffset())->GetTreeEntry((const Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((InputHandler*) G__getstructoffset())->GetInputWeight((const int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((InputHandler*) G__getstructoffset())->GetInputWeight());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) InputHandler::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) InputHandler::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) InputHandler::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      InputHandler::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((InputHandler*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) InputHandler::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) InputHandler::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) InputHandler::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1064_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) InputHandler::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_ExternalDataFit_base_1064_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   InputHandler* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new InputHandler(*(InputHandler*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef InputHandler G__TInputHandler;
static int G___ROOT_DICT_ExternalDataFit_base_1064_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (InputHandler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((InputHandler*) (soff+(sizeof(InputHandler)*i)))->~G__TInputHandler();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (InputHandler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((InputHandler*) (soff))->~G__TInputHandler();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_ExternalDataFit_base_1064_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   InputHandler* dest = (InputHandler*) G__getstructoffset();
   *dest = *(InputHandler*) libp->para[0].ref;
   const InputHandler& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MeasurementBase */
static int G___ROOT_DICT_ExternalDataFit_base_1115_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MeasurementBase*) G__getstructoffset())->Renormalise();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MeasurementBase*) G__getstructoffset())->ReconfigureFast();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MeasurementBase*) G__getstructoffset())->Reconfigure();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TH2D* pobj;
         TH2D xobj = ((MeasurementBase*) G__getstructoffset())->GetCovarMatrix();
         pobj = new TH2D(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->GetLikelihood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MeasurementBase*) G__getstructoffset())->GetNDOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MeasurementBase*) G__getstructoffset())->ThrowCovariance();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MeasurementBase*) G__getstructoffset())->SetFakeDataValues(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MeasurementBase*) G__getstructoffset())->SetFluxHistogram(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->TotalIntegratedFlux(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->TotalIntegratedFlux(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->TotalIntegratedFlux(*((string*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->TotalIntegratedFlux());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->PredictedEventRate(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->PredictedEventRate(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->PredictedEventRate(*((string*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->PredictedEventRate());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MeasurementBase*) G__getstructoffset())->ResetAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MeasurementBase*) G__getstructoffset())->FillEventVariables((FitEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MeasurementBase*) G__getstructoffset())->isSignal((FitEvent*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MeasurementBase*) G__getstructoffset())->FillHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MeasurementBase*) G__getstructoffset())->ConvertEventRates();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MeasurementBase*) G__getstructoffset())->ScaleEvents();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MeasurementBase*) G__getstructoffset())->ApplyNormScale((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MeasurementBase*) G__getstructoffset())->Write(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((MeasurementBase*) G__getstructoffset())->Write();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH1*>* pobj;
         vector<TH1*> xobj = ((MeasurementBase*) G__getstructoffset())->GetDataList();
         pobj = new vector<TH1*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH1*>* pobj;
         vector<TH1*> xobj = ((MeasurementBase*) G__getstructoffset())->GetMCList();
         pobj = new vector<TH1*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH1*>* pobj;
         vector<TH1*> xobj = ((MeasurementBase*) G__getstructoffset())->GetFineList();
         pobj = new vector<TH1*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH1*>* pobj;
         vector<TH1*> xobj = ((MeasurementBase*) G__getstructoffset())->GetMaskList();
         pobj = new vector<TH1*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH1*>* pobj;
         vector<TH1*> xobj = ((MeasurementBase*) G__getstructoffset())->GetFluxList();
         pobj = new vector<TH1*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH1*>* pobj;
         vector<TH1*> xobj = ((MeasurementBase*) G__getstructoffset())->GetEventRateList();
         pobj = new vector<TH1*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH1*>* pobj;
         vector<TH1*> xobj = ((MeasurementBase*) G__getstructoffset())->GetXSecList();
         pobj = new vector<TH1*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MeasurementBase*) G__getstructoffset())->GetInput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((MeasurementBase*) G__getstructoffset())->GetName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->GetScaleFactor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->GetXVar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->GetYVar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->GetZVar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->GetMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1115_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MeasurementBase*) G__getstructoffset())->GetEnu());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MeasurementBase G__TMeasurementBase;
static int G___ROOT_DICT_ExternalDataFit_base_1115_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MeasurementBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MeasurementBase*) (soff+(sizeof(MeasurementBase)*i)))->~G__TMeasurementBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MeasurementBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MeasurementBase*) (soff))->~G__TMeasurementBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_ExternalDataFit_base_1115_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MeasurementBase* dest = (MeasurementBase*) G__getstructoffset();
   *dest = *(MeasurementBase*) libp->para[0].ref;
   const MeasurementBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Measurement1D */
static int G___ROOT_DICT_ExternalDataFit_base_1121_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Measurement1D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Measurement1D[n];
     } else {
       p = new((void*) gvp) Measurement1D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Measurement1D;
     } else {
       p = new((void*) gvp) Measurement1D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement1D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->SetupMeasurement(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (FitWeight*) G__int(libp->para[2]), *((string*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->SetupDefaultHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->SetFitOptions(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->SetDataValues(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->SetDataFromFile(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->SetDataFromDatabase(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->SetCovarMatrix(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->SetCovarMatrixFromText(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->SetCovarFromDataFile(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->SetSmearingMatrix(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->SetBinMask(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->ApplySmearingMatrix();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->ResetFakeData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->ResetData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         THStack* pobj;
         THStack xobj = ((Measurement1D*) G__getstructoffset())->GetModeStack();
         pobj = new THStack(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Measurement1D*) G__getstructoffset())->GetMCHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Measurement1D*) G__getstructoffset())->GetDataHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement1D*) G__getstructoffset())->GetBinContents(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1121_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((Measurement1D*) G__getstructoffset())->GetXSec(*((string*) G__int(libp->para[0])));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_ExternalDataFit_base_1121_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Measurement1D* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Measurement1D(*(Measurement1D*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement1D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Measurement1D G__TMeasurement1D;
static int G___ROOT_DICT_ExternalDataFit_base_1121_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Measurement1D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Measurement1D*) (soff+(sizeof(Measurement1D)*i)))->~G__TMeasurement1D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Measurement1D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Measurement1D*) (soff))->~G__TMeasurement1D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_ExternalDataFit_base_1121_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Measurement1D* dest = (Measurement1D*) G__getstructoffset();
   *dest = *(Measurement1D*) libp->para[0].ref;
   const Measurement1D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JointMeas1D */
static int G___ROOT_DICT_ExternalDataFit_base_1122_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JointMeas1D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JointMeas1D[n];
     } else {
       p = new((void*) gvp) JointMeas1D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JointMeas1D;
     } else {
       p = new((void*) gvp) JointMeas1D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_JointMeas1D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1122_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JointMeas1D*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1122_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JointMeas1D*) G__getstructoffset())->MakePlots();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1122_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JointMeas1D*) G__getstructoffset())->GetCombinedFlux());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1122_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JointMeas1D*) G__getstructoffset())->GetCombinedEventRate());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_ExternalDataFit_base_1122_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JointMeas1D* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JointMeas1D(*(JointMeas1D*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_JointMeas1D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JointMeas1D G__TJointMeas1D;
static int G___ROOT_DICT_ExternalDataFit_base_1122_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JointMeas1D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JointMeas1D*) (soff+(sizeof(JointMeas1D)*i)))->~G__TJointMeas1D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JointMeas1D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JointMeas1D*) (soff))->~G__TJointMeas1D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_ExternalDataFit_base_1122_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JointMeas1D* dest = (JointMeas1D*) G__getstructoffset();
   *dest = *(JointMeas1D*) libp->para[0].ref;
   const JointMeas1D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Measurement2D */
static int G___ROOT_DICT_ExternalDataFit_base_1127_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Measurement2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Measurement2D[n];
     } else {
       p = new((void*) gvp) Measurement2D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Measurement2D;
     } else {
       p = new((void*) gvp) Measurement2D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement2D*) G__getstructoffset())->SetupMeasurement(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (FitWeight*) G__int(libp->para[2]), *((string*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement2D*) G__getstructoffset())->SetupDefaultHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement2D*) G__getstructoffset())->SetFitOptions(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement2D*) G__getstructoffset())->SetDataValues(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, *((string*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement2D*) G__getstructoffset())->SetDataValues(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement2D*) G__getstructoffset())->SetDataValuesFromText(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement2D*) G__getstructoffset())->SetCovarMatrix(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement2D*) G__getstructoffset())->SetCovarMatrixFromText(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement2D*) G__getstructoffset())->SetCovarMatrixFromChol(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement2D*) G__getstructoffset())->SetMapValuesFromText(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement2D*) G__getstructoffset())->SetBinMask(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         THStack* pobj;
         THStack xobj = ((Measurement2D*) G__getstructoffset())->GetModeStack();
         pobj = new THStack(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Measurement2D*) G__getstructoffset())->GetMCHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Measurement2D*) G__getstructoffset())->GetDataHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Measurement2D*) G__getstructoffset())->GetBinContents(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_ExternalDataFit_base_1127_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((Measurement2D*) G__getstructoffset())->GetXSec(*((string*) G__int(libp->para[0])));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_ExternalDataFit_base_1127_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Measurement2D* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Measurement2D(*(Measurement2D*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement2D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Measurement2D G__TMeasurement2D;
static int G___ROOT_DICT_ExternalDataFit_base_1127_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Measurement2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Measurement2D*) (soff+(sizeof(Measurement2D)*i)))->~G__TMeasurement2D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Measurement2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Measurement2D*) (soff))->~G__TMeasurement2D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_ExternalDataFit_base_1127_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Measurement2D* dest = (Measurement2D*) G__getstructoffset();
   *dest = *(Measurement2D*) libp->para[0].ref;
   const Measurement2D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* FitParticle */

/* FitEventBase */

/* FitEvent */

/* FitSpline */

/* FitSplineHead */

/* FitWeight */

/* FitBase */

/* InputHandler */

/* MeasurementBase */

/* Measurement1D */

/* JointMeas1D */

/* Measurement2D */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunc_ROOT_DICT_ExternalDataFit_base {
 public:
  G__Sizep2memfunc_ROOT_DICT_ExternalDataFit_base(): p(&G__Sizep2memfunc_ROOT_DICT_ExternalDataFit_base::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunc_ROOT_DICT_ExternalDataFit_base::*p)();
};

size_t G__get_sizep2memfunc_ROOT_DICT_ExternalDataFit_base()
{
  G__Sizep2memfunc_ROOT_DICT_ExternalDataFit_base a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritance_ROOT_DICT_ExternalDataFit_base() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle))) {
     FitParticle *G__Lderived;
     G__Lderived=(FitParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle),G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase))) {
     FitEventBase *G__Lderived;
     G__Lderived=(FitEventBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase),G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent))) {
     FitEvent *G__Lderived;
     G__Lderived=(FitEvent*)0x1000;
     {
       FitEventBase *G__Lpbase=(FitEventBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent),G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent),G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline))) {
     FitSpline *G__Lderived;
     G__Lderived=(FitSpline*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline),G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead))) {
     FitSplineHead *G__Lderived;
     G__Lderived=(FitSplineHead*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead),G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight))) {
     FitWeight *G__Lderived;
     G__Lderived=(FitWeight*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight),G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler))) {
     InputHandler *G__Lderived;
     G__Lderived=(InputHandler*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler),G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement1D))) {
     Measurement1D *G__Lderived;
     G__Lderived=(Measurement1D*)0x1000;
     {
       MeasurementBase *G__Lpbase=(MeasurementBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement1D),G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_MeasurementBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_JointMeas1D))) {
     JointMeas1D *G__Lderived;
     G__Lderived=(JointMeas1D*)0x1000;
     {
       Measurement1D *G__Lpbase=(Measurement1D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_JointMeas1D),G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement1D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MeasurementBase *G__Lpbase=(MeasurementBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_JointMeas1D),G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_MeasurementBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement2D))) {
     Measurement2D *G__Lderived;
     G__Lderived=(Measurement2D*)0x1000;
     {
       MeasurementBase *G__Lpbase=(MeasurementBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement2D),G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_MeasurementBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetable_ROOT_DICT_ExternalDataFit_base() {

   /* Setting up typedef entry */
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<FitParticle>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitParticlecOallocatorlEFitParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEFitParticlecOallocatorlEFitParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitParticlecOallocatorlEFitParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEFitParticlecOallocatorlEFitParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitParticlecOallocatorlEFitParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::string>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,int>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,int>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,double>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,double>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,bool>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<double> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<FitSpline*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_listlEFitSplinemUcOallocatorlEFitSplinemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<t2krew::T2KSyst_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEt2krewcLcLET2KSystcOallocatorlEt2krewcLcLET2KSystgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEt2krewcLcLET2KSystcOallocatorlEt2krewcLcLET2KSystgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEt2krewcLcLET2KSystcOallocatorlEt2krewcLcLET2KSystgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEt2krewcLcLET2KSystcOallocatorlEt2krewcLcLET2KSystgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEt2krewcLcLET2KSystcOallocatorlEt2krewcLcLET2KSystgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<t2krew::ET2KSyst>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEt2krewcLcLET2KSystcOallocatorlEt2krewcLcLET2KSystgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<T2KSyst_t,T2KSystInfo*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEt2krewcLcLET2KSystcOt2krewcLcLT2KSystInfomUcOlesslEt2krewcLcLET2KSystgRcOallocatorlEpairlEconstsPt2krewcLcLET2KSystcOt2krewcLcLT2KSystInfomUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<t2krew::ET2KSyst,t2krew::T2KSystInfo*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEt2krewcLcLET2KSystcOt2krewcLcLT2KSystInfomUcOlesslEt2krewcLcLET2KSystgRcOallocatorlEpairlEconstsPt2krewcLcLET2KSystcOt2krewcLcLT2KSystInfomUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<t2krew::ET2KSyst,t2krew::T2KSystInfo*,less<t2krew::ET2KSyst> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEt2krewcLcLET2KSystcOt2krewcLcLT2KSystInfomUcOlesslEt2krewcLcLET2KSystgRcOallocatorlEpairlEconstsPt2krewcLcLET2KSystcOt2krewcLcLT2KSystInfomUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,T2KWghtEngineI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOt2krewcLcLT2KWghtEngineImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOt2krewcLcLT2KWghtEngineImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,t2krew::T2KWghtEngineI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOt2krewcLcLT2KWghtEngineImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOt2krewcLcLT2KWghtEngineImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,t2krew::T2KWghtEngineI*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOt2krewcLcLT2KWghtEngineImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOt2krewcLcLT2KWghtEngineImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<neut::rew::NSyst_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEneutcLcLrewcLcLENSystcOallocatorlEneutcLcLrewcLcLENSystgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEneutcLcLrewcLcLENSystcOallocatorlEneutcLcLrewcLcLENSystgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEneutcLcLrewcLcLENSystcOallocatorlEneutcLcLrewcLcLENSystgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEneutcLcLrewcLcLENSystcOallocatorlEneutcLcLrewcLcLENSystgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEneutcLcLrewcLcLENSystcOallocatorlEneutcLcLrewcLcLENSystgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<neut::rew::ENSyst>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEneutcLcLrewcLcLENSystcOallocatorlEneutcLcLrewcLcLENSystgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<NSyst_t,NSystInfo*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEneutcLcLrewcLcLENSystcOneutcLcLrewcLcLNSystInfomUcOlesslEneutcLcLrewcLcLENSystgRcOallocatorlEpairlEconstsPneutcLcLrewcLcLENSystcOneutcLcLrewcLcLNSystInfomUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<neut::rew::ENSyst,neut::rew::NSystInfo*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEneutcLcLrewcLcLENSystcOneutcLcLrewcLcLNSystInfomUcOlesslEneutcLcLrewcLcLENSystgRcOallocatorlEpairlEconstsPneutcLcLrewcLcLENSystcOneutcLcLrewcLcLNSystInfomUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<neut::rew::ENSyst,neut::rew::NSystInfo*,less<neut::rew::ENSyst> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEneutcLcLrewcLcLENSystcOneutcLcLrewcLcLNSystInfomUcOlesslEneutcLcLrewcLcLENSystgRcOallocatorlEpairlEconstsPneutcLcLrewcLcLENSystcOneutcLcLrewcLcLNSystInfomUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,NReWeightI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOneutcLcLrewcLcLNReWeightImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOneutcLcLrewcLcLNReWeightImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,neut::rew::NReWeightI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOneutcLcLrewcLcLNReWeightImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOneutcLcLrewcLcLNReWeightImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,neut::rew::NReWeightI*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOneutcLcLrewcLcLNReWeightImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOneutcLcLrewcLcLNReWeightImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<niwg::rew::NIWGSyst_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLENIWGSystcOallocatorlEniwgcLcLrewcLcLENIWGSystgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEniwgcLcLrewcLcLENIWGSystcOallocatorlEniwgcLcLrewcLcLENIWGSystgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLENIWGSystcOallocatorlEniwgcLcLrewcLcLENIWGSystgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEniwgcLcLrewcLcLENIWGSystcOallocatorlEniwgcLcLrewcLcLENIWGSystgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLENIWGSystcOallocatorlEniwgcLcLrewcLcLENIWGSystgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<niwg::rew::ENIWGSyst>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLENIWGSystcOallocatorlEniwgcLcLrewcLcLENIWGSystgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<NIWGSyst_t,NIWGSystInfo*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEniwgcLcLrewcLcLENIWGSystcOniwgcLcLrewcLcLNIWGSystInfomUcOlesslEniwgcLcLrewcLcLENIWGSystgRcOallocatorlEpairlEconstsPniwgcLcLrewcLcLENIWGSystcOniwgcLcLrewcLcLNIWGSystInfomUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<niwg::rew::ENIWGSyst,niwg::rew::NIWGSystInfo*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEniwgcLcLrewcLcLENIWGSystcOniwgcLcLrewcLcLNIWGSystInfomUcOlesslEniwgcLcLrewcLcLENIWGSystgRcOallocatorlEpairlEconstsPniwgcLcLrewcLcLENIWGSystcOniwgcLcLrewcLcLNIWGSystInfomUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<niwg::rew::ENIWGSyst,niwg::rew::NIWGSystInfo*,less<niwg::rew::ENIWGSyst> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEniwgcLcLrewcLcLENIWGSystcOniwgcLcLrewcLcLNIWGSystInfomUcOlesslEniwgcLcLrewcLcLENIWGSystgRcOallocatorlEpairlEconstsPniwgcLcLrewcLcLENIWGSystcOniwgcLcLrewcLcLNIWGSystInfomUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<NIWGPartStack>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLNIWGPartStackcOallocatorlEniwgcLcLrewcLcLNIWGPartStackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEniwgcLcLrewcLcLNIWGPartStackcOallocatorlEniwgcLcLrewcLcLNIWGPartStackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLNIWGPartStackcOallocatorlEniwgcLcLrewcLcLNIWGPartStackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEniwgcLcLrewcLcLNIWGPartStackcOallocatorlEniwgcLcLrewcLcLNIWGPartStackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLNIWGPartStackcOallocatorlEniwgcLcLrewcLcLNIWGPartStackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<niwg::rew::NIWGPartStack>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLNIWGPartStackcOallocatorlEniwgcLcLrewcLcLNIWGPartStackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,NIWGReWeightI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOniwgcLcLrewcLcLNIWGReWeightImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOniwgcLcLrewcLcLNIWGReWeightImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,niwg::rew::NIWGReWeightI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOniwgcLcLrewcLcLNIWGReWeightImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOniwgcLcLrewcLcLNIWGReWeightImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,niwg::rew::NIWGReWeightI*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOniwgcLcLrewcLcLNIWGReWeightImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOniwgcLcLrewcLcLNIWGReWeightImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TH2D*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH2D*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH2D*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH2D*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::pair<int,int>,TH3D*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEpairlEintcOintgRcOTH3DmUcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOTH3DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,TH3D*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEpairlEintcOintgRcOTH3DmUcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOTH3DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,TH3D*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEpairlEintcOintgRcOTH3DmUcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOTH3DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,TH3D*,less<pair<int,int> > >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEpairlEintcOintgRcOTH3DmUcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOTH3DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TH3D*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEintcOTH3DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH3DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TH3D*,less<int> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEintcOTH3DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH3DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TH1D*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEintcOTH1DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH1DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TH1D*,less<int> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEintcOTH1DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH1DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TF1>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETF1cOallocatorlETF1gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETF1cOallocatorlETF1gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETF1cOallocatorlETF1gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETF1cOallocatorlETF1gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETF1cOallocatorlETF1gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<FitEventBase*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitEventBasemUcOallocatorlEFitEventBasemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEFitEventBasemUcOallocatorlEFitEventBasemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitEventBasemUcOallocatorlEFitEventBasemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEFitEventBasemUcOallocatorlEFitEventBasemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitEventBasemUcOallocatorlEFitEventBasemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH1D*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH1*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MeasurementBase*>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEMeasurementBasemUcOallocatorlEMeasurementBasemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEMeasurementBasemUcOallocatorlEMeasurementBasemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEMeasurementBasemUcOallocatorlEMeasurementBasemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEMeasurementBasemUcOallocatorlEMeasurementBasemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEMeasurementBasemUcOallocatorlEMeasurementBasemUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* FitParticle */
static void G__setup_memvarFitParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle));
   { FitParticle *p; p=(FitParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TLorentzVector),-1,-1,1,"fP=",0,"!< Particle 4 Momentum");
   G__memvar_setup((void*)((long)(&p->fPID)-(long)(p)),105,0,0,-1,-1,-1,1,"fPID=",0,"!< Particle PDG Code");
   G__memvar_setup((void*)((long)(&p->fIsAlive)-(long)(p)),105,0,0,-1,-1,-1,1,"fIsAlive=",0,"!< Whether the particle is alive at the end of the event (Yes 1, No 0, Other? -1)");
   G__memvar_setup((void*)((long)(&p->fStatus)-(long)(p)),105,0,0,-1,-1,-1,1,"fStatus=",0,"!< Particle Status (Incoming 1, FSI 2, Outgoing 0, Other 3)");
   G__memvar_setup((void*)((long)(&p->fMass)-(long)(p)),100,0,0,-1,-1,-1,1,"fMass=",0,"!< Particle Mass");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FitEventBase */
static void G__setup_memvarFitEventBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase));
   { FitEventBase *p; p=(FitEventBase*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->X_VAR)-(long)(p)),100,0,0,-1,-1,-1,1,"X_VAR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Y_VAR)-(long)(p)),100,0,0,-1,-1,-1,1,"Y_VAR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Z_VAR)-(long)(p)),100,0,0,-1,-1,-1,1,"Z_VAR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mode)-(long)(p)),105,0,0,-1,-1,-1,1,"Mode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),100,0,0,-1,-1,-1,1,"E=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Weight)-(long)(p)),100,0,0,-1,-1,-1,1,"Weight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Signal)-(long)(p)),103,0,0,-1,-1,-1,1,"Signal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Index)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Index=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BinIndex)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"BinIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fType)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dial_coeff)-(long)(p)),85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TArrayD),-1,-1,1,"dial_coeff=",0,"Depedendent on dials (needs header file provided)");
   G__memvar_setup((void*)((long)(&p->neut_event)-(long)(p)),85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_NeutVect),-1,-1,1,"neut_event=",0,"!< Pointer to Neut Vector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FitEvent */
static void G__setup_memvarFitEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent));
   { FitEvent *p; p=(FitEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fEventNo)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fEventNo=",0,"!< Event No in MC");
   G__memvar_setup((void*)((long)(&p->fNParticles)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fNParticles=",0,"!< Total Number of Particles");
   G__memvar_setup((void*)((long)(&p->fNFSIParticles)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fNFSIParticles=",0,"!< Total Number of Particles involved in FSI");
   G__memvar_setup((void*)((long)(&p->fNIncomingParticles)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fNIncomingParticles=",0,"!< Total Number of Starting particles");
   G__memvar_setup((void*)((long)(&p->fNFinalParticles)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fNFinalParticles=",0,"!< Total Number of Final Particles");
   G__memvar_setup((void*)((long)(&p->fCurrPartIndex)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fCurrPartIndex=",0,"!< Current index of particle in iteration");
   G__memvar_setup((void*)((long)(&p->fit_particle)-(long)(p)),85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle),-1,-1,1,"fit_particle=",0,"!< Pointer to the currently created fit_particle");
   G__memvar_setup((void*)((long)(&p->all_particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitParticlecOallocatorlEFitParticlegRsPgR),G__defined_typename("vector<FitParticle>"),-1,1,"all_particles=",0,"!< vector of all fit particles");
   G__memvar_setup((void*)((long)(&p->TotCrs)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"TotCrs=",0,"!< Total Cross-section (Gives per event in NEUT, Total Integrated in NuWro)");
   G__memvar_setup((void*)((long)(&p->PFSurf)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PFSurf=",0,"!< Fermi Surface Momentum");
   G__memvar_setup((void*)((long)(&p->PFMax)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PFMax=",0,"!< Max Fermi Momentum");
   G__memvar_setup((void*)((long)(&p->TargetA)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"TargetA=",0,"!< Target Atomic Number");
   G__memvar_setup((void*)((long)(&p->TargetZ)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"TargetZ=",0,"!< Target Nucleus Charge");
   G__memvar_setup((void*)((long)(&p->TargetH)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"TargetH=",0,"!< Target Free Protons");
   G__memvar_setup((void*)((long)(&p->Ibound)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Ibound=",0,"!< Is target bound");
   G__memvar_setup((void*)((long)(&p->Nparticles)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Nparticles=",0,"!< Number of particles");
   G__memvar_setup((void*)((long)(&p->Nprimary)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Nprimary=",0,"!< Number of primary particles");
   G__memvar_setup((void*)((long)(&p->weight)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"weight=",0,"!< event weight");
   G__memvar_setup((void*)((long)(&p->FlightDistance)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"FlightDistance=",0,"!< flight distance of neutrino, used for oscillation analysis");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FitSpline */
static void G__setup_memvarFitSpline(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline));
   { FitSpline *p; p=(FitSpline*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->var_enums)-(long)(p)),117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"var_enums=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x_vals)-(long)(p)),117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double> >"),-1,1,"x_vals=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x_low)-(long)(p)),117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"x_low=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x_high)-(long)(p)),117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"x_high=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->needs_fit)-(long)(p)),103,0,0,-1,-1,-1,1,"needs_fit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->offset)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"offset=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->npar)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"npar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ndim)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"ndim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->spline)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"spline=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->form)-(long)(p)),117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,1,"form=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->points)-(long)(p)),117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,1,"points=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol1=%lldLL",(long long)FitSpline::k1DPol1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol2=%lldLL",(long long)FitSpline::k1DPol2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol3=%lldLL",(long long)FitSpline::k1DPol3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol4=%lldLL",(long long)FitSpline::k1DPol4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol5=%lldLL",(long long)FitSpline::k1DPol5).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol6=%lldLL",(long long)FitSpline::k1DPol6).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol1C=%lldLL",(long long)FitSpline::k1DPol1C).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol2C=%lldLL",(long long)FitSpline::k1DPol2C).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol3C=%lldLL",(long long)FitSpline::k1DPol3C).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol4C=%lldLL",(long long)FitSpline::k1DPol4C).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol5C=%lldLL",(long long)FitSpline::k1DPol5C).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol5C_LX=%lldLL",(long long)FitSpline::k1DPol5C_LX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol10=%lldLL",(long long)FitSpline::k1DPol10).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DTSpline3=%lldLL",(long long)FitSpline::k1DTSpline3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k1DPol25=%lldLL",(long long)FitSpline::k1DPol25).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types),-1,-2,1,G__FastAllocString(2048).Format("k2DPol6=%lldLL",(long long)FitSpline::k2DPol6).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FitSplineHead */
static void G__setup_memvarFitSplineHead(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead));
   { FitSplineHead *p; p=(FitSplineHead*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ngen_events)-(long)(p)),105,0,0,-1,-1,-1,1,"ngen_events=",0,"Number of events in the tree these were generated with (needed for scaling)");
   G__memvar_setup((void*)((long)(&p->current_offset)-(long)(p)),105,0,0,-1,-1,-1,1,"current_offset=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SplineObjects)-(long)(p)),117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_listlEFitSplinemUcOallocatorlEFitSplinemUgRsPgR),G__defined_typename("list<FitSpline*>"),-1,1,"SplineObjects=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FitWeight */
static void G__setup_memvarFitWeight(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight));
   { FitWeight *p; p=(FitWeight*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->neut_rw)-(long)(p)),85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_neutcLcLrewcLcLNReWeight),-1,-1,1,"neut_rw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->niwg_rw)-(long)(p)),85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_niwgcLcLrewcLcLNIWGReWeight),-1,-1,1,"niwg_rw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->t2k_rw)-(long)(p)),85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_t2krewcLcLT2KReWeight),-1,-1,1,"t2k_rw=",0,"!< T2K RW Object");
   G__memvar_setup((void*)((long)(&p->t2k_neutrw)-(long)(p)),85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_t2krewcLcLT2KNeutReWeight),-1,-1,1,"t2k_neutrw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->t2k_niwgrw)-(long)(p)),85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_t2krewcLcLT2KNIWGReWeight),-1,-1,1,"t2k_niwgrw=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"norm_enum=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"dial_names=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"dial_enums=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"dial_values=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETF1cOallocatorlETF1gRsPgR),G__defined_typename("vector<TF1>"),-1,4,"dial_func=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"dial_units=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,4,"rw_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"dial_changed=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"using_neut=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"using_genie=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"using_niwg=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"using_t2k=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"using_nuwro=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"neut_changed=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"genie_changed=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"niwg_changed=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"nuwro_changed=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"t2k_changed=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead),-1,-1,4,"spline_head=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FitBase */
static void G__setup_memvarFitBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitBase));
   {
   }
   G__tag_memvar_reset();
}


   /* InputHandler */
static void G__setup_memvarInputHandler(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler));
   { InputHandler *p; p=(InputHandler*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->eventType)-(long)(p)),105,0,0,-1,-1,-1,1,"eventType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TChain),-1,-1,2,"tn=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase),-1,-1,2,"signal_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent),-1,-1,2,"cust_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead),-1,-1,2,"splhead=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"maxEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"nEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"curevt_i=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"fluxHist=",0,"!< Flux Histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"eventHist=",0,"!< Event Histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"xsecHist=",0,"!< XSec Histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TFile),-1,-1,2,"inRootFile=",0,"!< Input ROOT file (e.g NEUT MC)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"inFile=",0,"/!< Name of input ROOT file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"inType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitEventBasemUcOallocatorlEFitEventBasemUgRsPgR),G__defined_typename("vector<FitEventBase*>"),-1,2,"signal_events=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"handleName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_NeutVect),-1,-1,2,"neut_event=",0,"!< Pointer to NEUT Events  ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"joint_index_low=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"joint_index_high=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR),G__defined_typename("vector<TH1D*>"),-1,2,"joint_index_hist=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isJointInput=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"cur_entry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MeasurementBase */
static void G__setup_memvarMeasurementBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_MeasurementBase));
   { MeasurementBase *p; p=(MeasurementBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Enu=",0,"!< Neutrino Energy  ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"EnuMin=",0,"!< Minimum incoming particle energy of events to include");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"EnuMax=",0,"!< Maximum incoming particle energy of events to include");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase),-1,-1,2,"signal_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent),-1,-1,2,"cust_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight),-1,-1,2,"rw_engine=",0,"!< Pointer to the rw engine");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler),-1,-1,2,"input=",0,"!< Instance of the input handler");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"measurementName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"eventType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"fluxHist=",0,"!< Flux Histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"eventHist=",0,"!< Event Histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"xsecHist=",0,"!< XSec Histogram");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"exp_distance=",0,"!< Incoming Particle flight distance (for oscillation analysis)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"scaleFactor=",0,"!< scaleFactor applied to events to convert from eventrate to final distribution");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"currentNorm=",0,"!< current normalisation factor applied if fit is \"FREE\"");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"filledMC=",0,"!< flag whether MC plots have been filled (For ApplyNormalisation)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"X_VAR=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Y_VAR=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Z_VAR=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Mode=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Weight=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"Signal=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"ievt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"nevents=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"Enu_rec=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"ThetaMu=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"CosThetaMu=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"X_VAR_VECT=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"Y_VAR_VECT=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"Z_VAR_VECT=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"MODE_VECT=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,2,"SIGNAL_VECT=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Measurement1D */
static void G__setup_memvarMeasurement1D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement1D));
   { Measurement1D *p; p=(Measurement1D*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mcHist_PDG)-(long)(p)),85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,1,"mcHist_PDG[61]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"dataHist=",0,"!< default data histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"dataOrig=",0,"!< histogram to store original data before throws.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"dataTrue=",0,"!< histogram to store true dataset");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"usingfakedata=",0,"!< Flag: whether the current data is actually fake from MC");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"fakeDataFile=",0,"!< Input fake data file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"mcHist=",0,"!< default MC Histogram used in the chi2 fits");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"mcFine=",0,"!< finely binned MC histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"mcStat=",0,"!< histogram with unweighted events to properly calculate statistical error on MC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1I),-1,-1,2,"maskHist=",0,"!< Mask histogram for neglecting specific bins");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"plotTitles=",0,"!< Plot title x and y for the histograms");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"covar=",0,"!< Inverted Covariance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"fullcovar=",0,"!< Full Covariance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"decomp=",0,"!< Decomposed Covariance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"correl=",0,"!< Correlation Matrix");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"smear=",0,"!< Smearing matrix (note, this is not symmetric, and also in general not square)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"covDet=",0,"!< Determinant of the covariance");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"normError=",0,"!< Sample norm error");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"fitType=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"xBins=",0,"!< xBin edges");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"data_values=",0,"!< data bin contents");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"data_errors=",0,"!< data bin errors");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"data_points=",0,"!< number of data points");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isShape=",0,"!< Flag: Perform Shape-only fit");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isFree=",0,"!< Flag: Perform normalisation free fit");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isDiag=",0,"!< Flag: only include uncorrelated diagonal errors");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isMask=",0,"!< Flag: Apply bin masking");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isRawEvents=",0,"!< Flag: Are bin contents just event rates");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isEnu1D=",0,"!< Flag: Perform Flux Unfolded Scaling");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isChi2SVD=",0,"!< Flag: Use alternative Chi2 SVD Method (Do not use)");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"addNormPenalty=",0,"!< Flag: Add a normalisation penalty term to the chi2.");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isFix=",0,"!< Flag for keeping norm fixed");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isFull=",0,"!< Flag for using full covariaince  ");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isDifXSec=",0,"!< Flag for creating a dif xsec");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isChi2=",0,"!< Flag for using Chi2 over LL methods");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"allowed_types=",0,"!< Fit Types Possible");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"default_types=",0,"!< Starting Default Fit Types");
   }
   G__tag_memvar_reset();
}


   /* JointMeas1D */
static void G__setup_memvarJointMeas1D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_JointMeas1D));
   { JointMeas1D *p; p=(JointMeas1D*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->subChain)-(long)(p)),117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEMeasurementBasemUcOallocatorlEMeasurementBasemUgRsPgR),G__defined_typename("vector<MeasurementBase*>"),-1,1,"subChain=",0,"!< Vector of experimental classes that are the sub measurements");
   G__memvar_setup((void*)((long)(&p->subInFiles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,1,"subInFiles=",0,"!< vector of input files for each of the sub measurements.");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isRatio=",0,"!< Flag: is this sample a hist1/hist2 ratio sample");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isSummed=",0,"!< Flag: is this sample a combination hist1 + hist2");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"saveSubMeas=",0,"!< Flag: Save each of the histograms from the sub samples as well as this joint samples plots");
   }
   G__tag_memvar_reset();
}


   /* Measurement2D */
static void G__setup_memvarMeasurement2D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement2D));
   { Measurement2D *p; p=(Measurement2D*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2D),-1,-1,2,"dataHist=",0,"!< default data histogram (use in chi2 calculations)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2D),-1,-1,2,"dataOrig=",0,"!< histogram to store original data before throws.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2D),-1,-1,2,"dataTrue=",0,"!< histogram to store true dataset");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"dataHist_X=",0,"!< Projections onto X of the dataHist");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"dataHist_Y=",0,"!< Projections onto Y of the dataHist");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2D),-1,-1,2,"mcHist=",0,"!< MC Histogram (used in chi2 calculations)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2D),-1,-1,2,"mcFine=",0,"!< Finely binned MC Histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2D),-1,-1,2,"mcHist_PDG[61]=",0,"!< MC Histograms for each interaction mode");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"mcHist_X=",0,"!< Projections onto X of the mcHist");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D),-1,-1,2,"mcHist_Y=",0,"!< Projections onto Y of the mcHist");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"fitType=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"usingfakedata=",0,"!< is current data actually fake");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"fakeDataFile=",0,"!< MC fake data input file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2I),-1,-1,2,"maskHist=",0,"!< mask histogram for the data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2I),-1,-1,2,"mapHist=",0,"!< map histogram used to convert 2D to 1D distributions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"plotTitles=",0,"!< X and Y plot titles.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"covar=",0,"!< inverted covariance matrix");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"fullcovar=",0,"!< covariance matrix");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"decomp=",0,"!< decomposed covariance matrix");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"correl=",0,"!< correlation matrix");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"covDet=",0,"!< covariance deteriminant");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"normError=",0,"!< Normalisation on the error on the data");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"xBins=",0,"!< X Bin Edges");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"yBins=",0,"!< Y Bin Edges");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"data_points_x=",0,"!< Number of X data points");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"data_points_y=",0,"!< NUmber of Y data points");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isShape=",0,"!< Flag: Perform shape-only fit");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isFree=",0,"!< Flag: Perform normalisation free fit");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isDiag=",0,"!< Flag: Only use diagonal bin errors in stats");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isMask=",0,"!< Flag: Apply bin masking");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isRawEvents=",0,"!< Flag: Only event rates in histograms");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isEnu=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isChi2SVD=",0,"!< Flag: Chi2 SVD Method (DO NOT USE)");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"addNormPenalty=",0,"!< Flag: Add normalisation penalty to fi");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isProjFitX=",0,"!< Flag: Use 1D projections onto X and Y to calculate the Chi2 Method. If flagged X will be used to set the rate.");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isProjFitY=",0,"!< Flag: Use 1D projections onto X and Y to calculate the Chi2 Method. If flagged Y will be used to set the rate.");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isFix=",0,"!< Flag: Fixed Histogram Norm");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isFull=",0,"!< Flag; Use Full Covar");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isDifXSec=",0,"!< Flag: Differential XSec");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isEnu1D=",0,"!< Flag: Flux Unfolded XSec");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isChi2=",0,"!< Flag; Use Chi2 over LL");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"default_types=",0,"!< Default Fit Options");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string),-1,-1,2,"allowed_types=",0,"!< Any allowed Fit Options");
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvar_ROOT_DICT_ExternalDataFit_base() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncFitParticle(void) {
   /* FitParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle));
   G__memfunc_setup("FitParticle",1111,G___ROOT_DICT_ExternalDataFit_base_237_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitParticle",1111,G___ROOT_DICT_ExternalDataFit_base_237_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle), -1, 0, 1, 1, 1, 0, "U 'NeutPart' - 0 - part", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitParticle",1111,G___ROOT_DICT_ExternalDataFit_base_237_0_3, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle), -1, 0, 1, 1, 1, 0, "H - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G___ROOT_DICT_ExternalDataFit_base_237_0_4, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FitParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_ExternalDataFit_base_237_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_ExternalDataFit_base_237_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FitParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_ExternalDataFit_base_237_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FitParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_ExternalDataFit_base_237_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_ExternalDataFit_base_237_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_ExternalDataFit_base_237_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FitParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_ExternalDataFit_base_237_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_ExternalDataFit_base_237_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FitParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FitParticle", 1111, G___ROOT_DICT_ExternalDataFit_base_237_0_16, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle), -1, 0, 1, 1, 1, 0, "u 'FitParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FitParticle", 1237, G___ROOT_DICT_ExternalDataFit_base_237_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_ExternalDataFit_base_237_0_18, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle), -1, 1, 1, 1, 1, 0, "u 'FitParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFitEventBase(void) {
   /* FitEventBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase));
   G__memfunc_setup("FitEventBase",1184,G___ROOT_DICT_ExternalDataFit_base_267_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitEventBase",1184,G___ROOT_DICT_ExternalDataFit_base_267_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase), -1, 0, 1, 1, 1, 0, "U 'FitEventBase' - 10 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G___ROOT_DICT_ExternalDataFit_base_267_0_3, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FitEventBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_ExternalDataFit_base_267_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitEventBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_ExternalDataFit_base_267_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FitEventBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_ExternalDataFit_base_267_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FitEventBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_ExternalDataFit_base_267_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_ExternalDataFit_base_267_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitEventBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_ExternalDataFit_base_267_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FitEventBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_ExternalDataFit_base_267_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitEventBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_ExternalDataFit_base_267_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FitEventBase::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FitEventBase", 1184, G___ROOT_DICT_ExternalDataFit_base_267_0_15, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase), -1, 0, 1, 1, 1, 0, "u 'FitEventBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FitEventBase", 1310, G___ROOT_DICT_ExternalDataFit_base_267_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_ExternalDataFit_base_267_0_17, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase), -1, 1, 1, 1, 1, 0, "u 'FitEventBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFitEvent(void) {
   /* FitEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent));
   G__memfunc_setup("FitEvent",805,G___ROOT_DICT_ExternalDataFit_base_268_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitEvent",805,G___ROOT_DICT_ExternalDataFit_base_268_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent), -1, 0, 1, 1, 1, 0, "U 'NeutVect' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventAddress",1524,G___ROOT_DICT_ExternalDataFit_base_268_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'NeutVect' - 2 - tempevent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NeutKinematics",1444,G___ROOT_DICT_ExternalDataFit_base_268_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcKinematics",1403,G___ROOT_DICT_ExternalDataFit_base_268_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetEvent",1029,G___ROOT_DICT_ExternalDataFit_base_268_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PartInfo",803,G___ROOT_DICT_ExternalDataFit_base_268_0_7, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Npart",517,G___ROOT_DICT_ExternalDataFit_base_268_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NFinalpart",1007,G___ROOT_DICT_ExternalDataFit_base_268_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Enu",296,G___ROOT_DICT_ExternalDataFit_base_268_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tnu",311,G___ROOT_DICT_ExternalDataFit_base_268_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pnu",307,G___ROOT_DICT_ExternalDataFit_base_268_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PDGnu",446,G___ROOT_DICT_ExternalDataFit_base_268_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ilep",394,G___ROOT_DICT_ExternalDataFit_base_268_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("q0",161,G___ROOT_DICT_ExternalDataFit_base_268_0_15, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("q3",164,G___ROOT_DICT_ExternalDataFit_base_268_0_16, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G___ROOT_DICT_ExternalDataFit_base_268_0_17, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FitEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_ExternalDataFit_base_268_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_ExternalDataFit_base_268_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FitEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_ExternalDataFit_base_268_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FitEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_ExternalDataFit_base_268_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_ExternalDataFit_base_268_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_ExternalDataFit_base_268_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FitEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_ExternalDataFit_base_268_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_ExternalDataFit_base_268_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FitEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FitEvent", 805, G___ROOT_DICT_ExternalDataFit_base_268_0_29, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent), -1, 0, 1, 1, 1, 0, "u 'FitEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FitEvent", 931, G___ROOT_DICT_ExternalDataFit_base_268_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_ExternalDataFit_base_268_0_31, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent), -1, 1, 1, 1, 1, 0, "u 'FitEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFitSpline(void) {
   /* FitSpline */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline));
   G__memfunc_setup("FitSpline",910,G___ROOT_DICT_ExternalDataFit_base_801_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitSpline",910,G___ROOT_DICT_ExternalDataFit_base_801_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline), -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - ident u 'string' - 0 - dist "
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - list_enums u 'string' - 0 - points_def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconfigureSpline",1764,G___ROOT_DICT_ExternalDataFit_base_801_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - dial_enums u 'vector<double,allocator<double> >' 'vector<double>' 0 - dial_values", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G___ROOT_DICT_ExternalDataFit_base_801_0_4, 100, -1, -1, 0, 2, 1, 1, 8, 
"D - 'Double_t' 10 - x D - 'Double_t' 10 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoEval",571,G___ROOT_DICT_ExternalDataFit_base_801_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "D - - 10 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoEval",571,G___ROOT_DICT_ExternalDataFit_base_801_0_6, 100, -1, -1, 0, 3, 1, 1, 8, 
"D - - 10 - x D - - 10 - par "
"g - - 10 'true' use_offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G___ROOT_DICT_ExternalDataFit_base_801_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G___ROOT_DICT_ExternalDataFit_base_801_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - t i - - 0 - p "
"i - - 0 - d g - - 0 'true' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOffset",915,G___ROOT_DICT_ExternalDataFit_base_801_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSplineCoeff",1390,G___ROOT_DICT_ExternalDataFit_base_801_0_10, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "D - - 0 - weights", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G___ROOT_DICT_ExternalDataFit_base_801_0_11, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FitSpline::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_ExternalDataFit_base_801_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitSpline::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_ExternalDataFit_base_801_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FitSpline::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_ExternalDataFit_base_801_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FitSpline::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_ExternalDataFit_base_801_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_ExternalDataFit_base_801_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitSpline::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_ExternalDataFit_base_801_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FitSpline::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_ExternalDataFit_base_801_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitSpline::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_ExternalDataFit_base_801_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FitSpline::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FitSpline", 910, G___ROOT_DICT_ExternalDataFit_base_801_0_23, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline), -1, 0, 1, 1, 1, 0, "u 'FitSpline' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FitSpline", 1036, G___ROOT_DICT_ExternalDataFit_base_801_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_ExternalDataFit_base_801_0_25, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline), -1, 1, 1, 1, 1, 0, "u 'FitSpline' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFitSplineHead(void) {
   /* FitSplineHead */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead));
   G__memfunc_setup("FitSplineHead",1280,G___ROOT_DICT_ExternalDataFit_base_810_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcWeight",987,G___ROOT_DICT_ExternalDataFit_base_810_0_2, 100, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - incoeff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reconfigure",1145,G___ROOT_DICT_ExternalDataFit_base_810_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - dial_enums u 'vector<double,allocator<double> >' 'vector<double>' 0 - dial_values", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupEventWeights",1774,G___ROOT_DICT_ExternalDataFit_base_810_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FitEventBase' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSpline",884,G___ROOT_DICT_ExternalDataFit_base_810_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FitSpline' - 0 - spl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentOffset",1642,G___ROOT_DICT_ExternalDataFit_base_810_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G___ROOT_DICT_ExternalDataFit_base_810_0_7, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FitSplineHead::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_ExternalDataFit_base_810_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitSplineHead::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_ExternalDataFit_base_810_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FitSplineHead::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_ExternalDataFit_base_810_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FitSplineHead::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_ExternalDataFit_base_810_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_ExternalDataFit_base_810_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitSplineHead::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_ExternalDataFit_base_810_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FitSplineHead::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_ExternalDataFit_base_810_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitSplineHead::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_ExternalDataFit_base_810_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FitSplineHead::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FitSplineHead", 1280, G___ROOT_DICT_ExternalDataFit_base_810_0_19, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead), -1, 0, 1, 1, 1, 0, "u 'FitSplineHead' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FitSplineHead", 1406, G___ROOT_DICT_ExternalDataFit_base_810_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_ExternalDataFit_base_810_0_21, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead), -1, 1, 1, 1, 1, 0, "u 'FitSplineHead' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFitWeight(void) {
   /* FitWeight */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight));
   G__memfunc_setup("FitWeight",907,G___ROOT_DICT_ExternalDataFit_base_1058_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - rw_name u 'string' - 0 - inputfile", "Open a fit result file and grab the ttree and setup like that.  ", (void*) NULL, 0);
   G__memfunc_setup("FitWeight",907,G___ROOT_DICT_ExternalDataFit_base_1058_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight), -1, 0, 1, 1, 1, 0, "u 'string' - 0 '\"FitWeight\"' rw_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDialEnum",1071,G___ROOT_DICT_ExternalDataFit_base_1058_0_3, 105, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name i - - 0 '-1' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRWEnum",862,G___ROOT_DICT_ExternalDataFit_base_1058_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - dial_enum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncludeDial",1086,G___ROOT_DICT_ExternalDataFit_base_1058_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name i - - 0 - type "
"d - - 0 '0.0' startval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDialValue",1187,G___ROOT_DICT_ExternalDataFit_base_1058_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDialValue",1187,G___ROOT_DICT_ExternalDataFit_base_1058_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - dial d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDialValue",1175,G___ROOT_DICT_ExternalDataFit_base_1058_0_8, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDialValue",1175,G___ROOT_DICT_ExternalDataFit_base_1058_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - dial", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDialPos",972,G___ROOT_DICT_ExternalDataFit_base_1058_0_10, 104, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDialPos",972,G___ROOT_DICT_ExternalDataFit_base_1058_0_11, 104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - this_enum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDialType",1084,G___ROOT_DICT_ExternalDataFit_base_1058_0_12, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - this_enum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasDialChanged",1344,G___ROOT_DICT_ExternalDataFit_base_1058_0_13, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateWeightEngine",1825,G___ROOT_DICT_ExternalDataFit_base_1058_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAllDials",1074,G___ROOT_DICT_ExternalDataFit_base_1058_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 10 - x i - - 0 - npt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAllDials",1062,G___ROOT_DICT_ExternalDataFit_base_1058_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x i - - 0 - npt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDialNames",1166,G___ROOT_DICT_ExternalDataFit_base_1058_0_17, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDialEnums",1186,G___ROOT_DICT_ExternalDataFit_base_1058_0_18, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDialValues",1290,G___ROOT_DICT_ExternalDataFit_base_1058_0_19, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSampleNorm",1310,G___ROOT_DICT_ExternalDataFit_base_1058_0_20, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - samplename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcWeight",987,G___ROOT_DICT_ExternalDataFit_base_1058_0_21, 100, -1, -1, 0, 1, 1, 1, 0, "U 'FitEvent' - 0 - evt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcWeight",987,G___ROOT_DICT_ExternalDataFit_base_1058_0_22, 100, -1, -1, 0, 1, 1, 1, 0, "U 'FitEventBase' - 0 - evt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintState",1038,G___ROOT_DICT_ExternalDataFit_base_1058_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reconfigure",1145,G___ROOT_DICT_ExternalDataFit_base_1058_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupNeutRW",1110,G___ROOT_DICT_ExternalDataFit_base_1058_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupNIWGRW",1007,G___ROOT_DICT_ExternalDataFit_base_1058_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupT2KRW",907,G___ROOT_DICT_ExternalDataFit_base_1058_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSplineHeader",1492,G___ROOT_DICT_ExternalDataFit_base_1058_0_28, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupEventCoeff",1526,G___ROOT_DICT_ExternalDataFit_base_1058_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FitEventBase' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupSpline",1148,G___ROOT_DICT_ExternalDataFit_base_1058_0_30, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - dialname u 'string' - 0 - splinename "
"u 'string' - 0 - pointsdef", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSplineWeight",1606,G___ROOT_DICT_ExternalDataFit_base_1058_0_31, 100, -1, -1, 0, 1, 1, 1, 0, "U 'FitEvent' - 0 - evt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadSplineHead",1369,G___ROOT_DICT_ExternalDataFit_base_1058_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FitSplineHead' - 0 - splhead", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetSplines",1249,G___ROOT_DICT_ExternalDataFit_base_1058_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenSplines",1016,G___ROOT_DICT_ExternalDataFit_base_1058_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'FitEventBase' - 0 - evt g - - 0 'false' save_graph", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit1DSplineCoeff",1510,G___ROOT_DICT_ExternalDataFit_base_1058_0_35, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'FitEventBase' - 0 - event U 'FitSpline' - 0 - spl "
"d - - 0 - nom g - - 0 - save_graph", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit2DSplineCoeff",1511,G___ROOT_DICT_ExternalDataFit_base_1058_0_36, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'FitEventBase' - 0 - event U 'FitSpline' - 0 - spl "
"d - - 0 - nom g - - 0 - save_graph", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitNDSplineCoeff",1539,G___ROOT_DICT_ExternalDataFit_base_1058_0_37, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'FitEventBase' - 0 - event U 'FitSpline' - 0 - spl "
"d - - 0 - norm g - - 0 - save_graph", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G___ROOT_DICT_ExternalDataFit_base_1058_0_38, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FitWeight::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_ExternalDataFit_base_1058_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitWeight::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_ExternalDataFit_base_1058_0_40, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FitWeight::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_ExternalDataFit_base_1058_0_41, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FitWeight::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_ExternalDataFit_base_1058_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_ExternalDataFit_base_1058_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitWeight::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_ExternalDataFit_base_1058_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FitWeight::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_ExternalDataFit_base_1058_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FitWeight::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_ExternalDataFit_base_1058_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FitWeight::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FitWeight", 907, G___ROOT_DICT_ExternalDataFit_base_1058_0_50, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight), -1, 0, 1, 1, 1, 0, "u 'FitWeight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FitWeight", 1033, G___ROOT_DICT_ExternalDataFit_base_1058_0_51, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_ExternalDataFit_base_1058_0_52, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight), -1, 1, 1, 1, 1, 0, "u 'FitWeight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFitBase(void) {
   /* FitBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitBase));
   G__memfunc_setup("GetRWConvFunction",1701,G___ROOT_DICT_ExternalDataFit_base_1063_0_1, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TF1), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - type u 'string' - 0 - name", (char*)NULL, (void*) G__func2void( (TF1 (*)(string, string))(&FitBase::GetRWConvFunction) ), 0);
   G__memfunc_setup("GetRWUnits",988,G___ROOT_DICT_ExternalDataFit_base_1063_0_2, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - type u 'string' - 0 - name", (char*)NULL, (void*) G__func2void( (string (*)(string, string))(&FitBase::GetRWUnits) ), 0);
   G__memfunc_setup("RWSigmaToFrac",1241,G___ROOT_DICT_ExternalDataFit_base_1063_0_3, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - type u 'string' - 0 - name "
"d - - 0 - val", (char*)NULL, (void*) G__func2void( (double (*)(string, string, double))(&FitBase::RWSigmaToFrac) ), 0);
   G__memfunc_setup("RWSigmaToAbs",1139,G___ROOT_DICT_ExternalDataFit_base_1063_0_4, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - type u 'string' - 0 - name "
"d - - 0 - val", (char*)NULL, (void*) G__func2void( (double (*)(string, string, double))(&FitBase::RWSigmaToAbs) ), 0);
   G__memfunc_setup("RWAbsToSigma",1139,G___ROOT_DICT_ExternalDataFit_base_1063_0_5, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - type u 'string' - 0 - name "
"d - - 0 - val", (char*)NULL, (void*) G__func2void( (double (*)(string, string, double))(&FitBase::RWAbsToSigma) ), 0);
   G__memfunc_setup("RWFracToSigma",1241,G___ROOT_DICT_ExternalDataFit_base_1063_0_6, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - type u 'string' - 0 - name "
"d - - 0 - val", (char*)NULL, (void*) G__func2void( (double (*)(string, string, double))(&FitBase::RWFracToSigma) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncInputHandler(void) {
   /* InputHandler */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler));
   G__memfunc_setup("InputHandler",1230,G___ROOT_DICT_ExternalDataFit_base_1064_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InputHandler",1230,G___ROOT_DICT_ExternalDataFit_base_1064_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - handle u 'string' - 0 - infile_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseInputFile",1419,G___ROOT_DICT_ExternalDataFit_base_1064_0_3, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - inputfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadBinSplineFile",1664,G___ROOT_DICT_ExternalDataFit_base_1064_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadHistogramFile",1706,G___ROOT_DICT_ExternalDataFit_base_1064_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadNeutFile",1176,G___ROOT_DICT_ExternalDataFit_base_1064_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadGenieFile",1252,G___ROOT_DICT_ExternalDataFit_base_1064_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadNuWroFile",1271,G___ROOT_DICT_ExternalDataFit_base_1064_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEventSplineFile",1897,G___ROOT_DICT_ExternalDataFit_base_1064_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadJointFile",1280,G___ROOT_DICT_ExternalDataFit_base_1064_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSplineHead",1277,G___ROOT_DICT_ExternalDataFit_base_1064_0_11, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PredictedEventRate",1826,G___ROOT_DICT_ExternalDataFit_base_1064_0_12, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - low d - - 0 - high "
"u 'string' - 0 '\"width\"' intOpt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TotalIntegratedFlux",1962,G___ROOT_DICT_ExternalDataFit_base_1064_0_13, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - low d - - 0 - high "
"u 'string' - 0 '\"width\"' intOpt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventPointer",1539,G___ROOT_DICT_ExternalDataFit_base_1064_0_14, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSignalPointer",1631,G___ROOT_DICT_ExternalDataFit_base_1064_0_15, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEvents",995,G___ROOT_DICT_ExternalDataFit_base_1064_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGenEvents",1199,G___ROOT_DICT_ExternalDataFit_base_1064_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStartInput",1579,G___ROOT_DICT_ExternalDataFit_base_1064_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,G___ROOT_DICT_ExternalDataFit_base_1064_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFluxHistogram",1645,G___ROOT_DICT_ExternalDataFit_base_1064_0_20, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventHistogram",1744,G___ROOT_DICT_ExternalDataFit_base_1064_0_21, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXSecHistogram",1601,G___ROOT_DICT_ExternalDataFit_base_1064_0_22, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G___ROOT_DICT_ExternalDataFit_base_1064_0_23, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CanIGoFast",927,G___ROOT_DICT_ExternalDataFit_base_1064_0_24, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeEntry",1218,G___ROOT_DICT_ExternalDataFit_base_1064_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 10 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInputWeight",1432,G___ROOT_DICT_ExternalDataFit_base_1064_0_26, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 10 '-1' entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G___ROOT_DICT_ExternalDataFit_base_1064_0_27, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&InputHandler::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_ExternalDataFit_base_1064_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&InputHandler::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_ExternalDataFit_base_1064_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&InputHandler::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_ExternalDataFit_base_1064_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&InputHandler::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_ExternalDataFit_base_1064_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_ExternalDataFit_base_1064_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&InputHandler::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_ExternalDataFit_base_1064_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&InputHandler::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_ExternalDataFit_base_1064_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&InputHandler::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_ExternalDataFit_base_1064_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&InputHandler::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("InputHandler", 1230, G___ROOT_DICT_ExternalDataFit_base_1064_0_39, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler), -1, 0, 1, 1, 1, 0, "u 'InputHandler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~InputHandler", 1356, G___ROOT_DICT_ExternalDataFit_base_1064_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_ExternalDataFit_base_1064_0_41, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler), -1, 1, 1, 1, 1, 0, "u 'InputHandler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMeasurementBase(void) {
   /* MeasurementBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_MeasurementBase));
   G__memfunc_setup("Renormalise",1153,G___ROOT_DICT_ExternalDataFit_base_1115_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconfigureFast",1543,G___ROOT_DICT_ExternalDataFit_base_1115_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconfigure",1145,G___ROOT_DICT_ExternalDataFit_base_1115_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCovarMatrix",1424,G___ROOT_DICT_ExternalDataFit_base_1115_0_5, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetLikelihood",1316,G___ROOT_DICT_ExternalDataFit_base_1115_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNDOF",583,G___ROOT_DICT_ExternalDataFit_base_1115_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ThrowCovariance",1551,G___ROOT_DICT_ExternalDataFit_base_1115_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetFakeDataValues",1677,G___ROOT_DICT_ExternalDataFit_base_1115_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fkdt", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetFluxHistogram",1657,G___ROOT_DICT_ExternalDataFit_base_1115_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - fluxFile i - - 0 - minE "
"i - - 0 - maxE d - - 0 - fluxNorm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TotalIntegratedFlux",1962,G___ROOT_DICT_ExternalDataFit_base_1115_0_11, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 '\"width\"' intOpt d - - 0 '-9999.9' low "
"d - - 0 '-9999.9' high", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PredictedEventRate",1826,G___ROOT_DICT_ExternalDataFit_base_1115_0_12, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 '\"width\"' intOpt d - - 0 '-9999.9' low "
"d - - 0 '-9999.9' high", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetAll",796,G___ROOT_DICT_ExternalDataFit_base_1115_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FillEventVariables",1826,G___ROOT_DICT_ExternalDataFit_base_1115_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FitEvent' - 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isSignal",826,G___ROOT_DICT_ExternalDataFit_base_1115_0_15, 103, -1, -1, 0, 1, 1, 1, 0, "U 'FitEvent' - 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillHistograms",1448,G___ROOT_DICT_ExternalDataFit_base_1115_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConvertEventRates",1762,G___ROOT_DICT_ExternalDataFit_base_1115_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ScaleEvents",1117,G___ROOT_DICT_ExternalDataFit_base_1115_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ApplyNormScale",1418,G___ROOT_DICT_ExternalDataFit_base_1115_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - norm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Write",523,G___ROOT_DICT_ExternalDataFit_base_1115_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 '\"\"' drawOpt", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetDataList",1078,G___ROOT_DICT_ExternalDataFit_base_1115_0_21, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 2);
   G__memfunc_setup("GetMCList",844,G___ROOT_DICT_ExternalDataFit_base_1115_0_22, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetFineList",1086,G___ROOT_DICT_ExternalDataFit_base_1115_0_23, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetMaskList",1096,G___ROOT_DICT_ExternalDataFit_base_1115_0_24, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetFluxList",1115,G___ROOT_DICT_ExternalDataFit_base_1115_0_25, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventRateList",1610,G___ROOT_DICT_ExternalDataFit_base_1115_0_26, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXSecList",1071,G___ROOT_DICT_ExternalDataFit_base_1115_0_27, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInput",816,G___ROOT_DICT_ExternalDataFit_base_1115_0_28, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,G___ROOT_DICT_ExternalDataFit_base_1115_0_29, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScaleFactor",1383,G___ROOT_DICT_ExternalDataFit_base_1115_0_30, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXVar",673,G___ROOT_DICT_ExternalDataFit_base_1115_0_31, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYVar",674,G___ROOT_DICT_ExternalDataFit_base_1115_0_32, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZVar",675,G___ROOT_DICT_ExternalDataFit_base_1115_0_33, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMode",677,G___ROOT_DICT_ExternalDataFit_base_1115_0_34, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnu",584,G___ROOT_DICT_ExternalDataFit_base_1115_0_35, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MeasurementBase", 1663, G___ROOT_DICT_ExternalDataFit_base_1115_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_ExternalDataFit_base_1115_0_37, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_MeasurementBase), -1, 1, 1, 1, 1, 0, "u 'MeasurementBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMeasurement1D(void) {
   /* Measurement1D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement1D));
   G__memfunc_setup("Measurement1D",1275,G___ROOT_DICT_ExternalDataFit_base_1121_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G___ROOT_DICT_ExternalDataFit_base_1121_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupMeasurement",1687,G___ROOT_DICT_ExternalDataFit_base_1121_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - input u 'string' - 0 - type "
"U 'FitWeight' - 0 - rw u 'string' - 0 - fkdt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupDefaultHist",1646,G___ROOT_DICT_ExternalDataFit_base_1121_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFitOptions",1339,G___ROOT_DICT_ExternalDataFit_base_1121_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataValues",1302,G___ROOT_DICT_ExternalDataFit_base_1121_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - dataFile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataFromFile",1466,G___ROOT_DICT_ExternalDataFit_base_1121_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - inhistfile u 'string' - 0 - histname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataFromDatabase",1871,G___ROOT_DICT_ExternalDataFit_base_1121_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - inhistfile u 'string' - 0 - histname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCovarMatrix",1436,G___ROOT_DICT_ExternalDataFit_base_1121_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - covarFile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCovarMatrixFromText",2261,G___ROOT_DICT_ExternalDataFit_base_1121_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - covarFile i - - 0 - dim", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCovarFromDataFile",1973,G___ROOT_DICT_ExternalDataFit_base_1121_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - covarFile u 'string' - 0 - covName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSmearingMatrix",1751,G___ROOT_DICT_ExternalDataFit_base_1121_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - smearFile i - - 0 - true_dim "
"i - - 0 - reco_dim", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBinMask",977,G___ROOT_DICT_ExternalDataFit_base_1121_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - maskFile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFluxHistogram",1657,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - fluxFile i - - 0 - minE "
"i - - 0 - maxE d - - 0 - fluxNorm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TotalIntegratedFlux",1962,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 '\"width\"' intOpt d - - 0 '-9999.9' low "
"d - - 0 '-9999.9' high", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetAll",796,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillHistograms",1448,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ScaleEvents",1117,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ApplyNormScale",1418,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - norm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ApplySmearingMatrix",1969,G___ROOT_DICT_ExternalDataFit_base_1121_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNDOF",583,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLikelihood",1316,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFakeDataValues",1677,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fakeOption", "Set dataHist from file", (void*) NULL, 1);
   G__memfunc_setup("ResetFakeData",1268,G___ROOT_DICT_ExternalDataFit_base_1121_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetData",893,G___ROOT_DICT_ExternalDataFit_base_1121_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ThrowCovariance",1551,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModeStack",1179,G___ROOT_DICT_ExternalDataFit_base_1121_0_27, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_THStack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCHistogram",1374,G___ROOT_DICT_ExternalDataFit_base_1121_0_28, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataHistogram",1608,G___ROOT_DICT_ExternalDataFit_base_1121_0_29, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCList",844,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataList",1078,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaskList",1096,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFineList",1086,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBinContents",1415,G___ROOT_DICT_ExternalDataFit_base_1121_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - cont u 'vector<double,allocator<double> >' 'vector<double>' 1 - err", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCovarMatrix",1424,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXSec",659,G___ROOT_DICT_ExternalDataFit_base_1121_0_36, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "u 'string' - 0 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Write",523,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - drawOpt", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("Measurement1D", 1275, G___ROOT_DICT_ExternalDataFit_base_1121_0_38, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement1D), -1, 0, 1, 1, 1, 0, "u 'Measurement1D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Measurement1D", 1401, G___ROOT_DICT_ExternalDataFit_base_1121_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_ExternalDataFit_base_1121_0_40, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement1D), -1, 1, 1, 1, 1, 0, "u 'Measurement1D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJointMeas1D(void) {
   /* JointMeas1D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_JointMeas1D));
   G__memfunc_setup("JointMeas1D",1023,G___ROOT_DICT_ExternalDataFit_base_1122_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_JointMeas1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G___ROOT_DICT_ExternalDataFit_base_1122_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupMeasurement",1687,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - input u 'string' - 0 - type "
"U 'FitWeight' - 0 - rw u 'string' - 0 - fkdt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TotalIntegratedFlux",1962,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 '\"width\"' intOpt d - - 0 '-9999.9' low "
"d - - 0 '-9999.9' high", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconfigure",1145,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconfigureFast",1543,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakePlots",912,G___ROOT_DICT_ExternalDataFit_base_1122_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCList",844,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataList",1078,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFineList",1086,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaskList",1096,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFluxList",1115,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventRateList",1610,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXSecList",1071,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCombinedFlux",1504,G___ROOT_DICT_ExternalDataFit_base_1122_0_15, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCombinedEventRate",1999,G___ROOT_DICT_ExternalDataFit_base_1122_0_16, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Write",523,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - drawOpt", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("JointMeas1D", 1023, G___ROOT_DICT_ExternalDataFit_base_1122_0_18, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_JointMeas1D), -1, 0, 1, 1, 1, 0, "u 'JointMeas1D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~JointMeas1D", 1149, G___ROOT_DICT_ExternalDataFit_base_1122_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_ExternalDataFit_base_1122_0_20, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_JointMeas1D), -1, 1, 1, 1, 1, 0, "u 'JointMeas1D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMeasurement2D(void) {
   /* Measurement2D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement2D));
   G__memfunc_setup("Measurement2D",1276,G___ROOT_DICT_ExternalDataFit_base_1127_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupMeasurement",1687,G___ROOT_DICT_ExternalDataFit_base_1127_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - input u 'string' - 0 - type "
"U 'FitWeight' - 0 - rw u 'string' - 0 - fkdt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupDefaultHist",1646,G___ROOT_DICT_ExternalDataFit_base_1127_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFitOptions",1339,G___ROOT_DICT_ExternalDataFit_base_1127_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataValues",1302,G___ROOT_DICT_ExternalDataFit_base_1127_0_5, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - dataFile d - - 0 - dataNorm "
"u 'string' - 0 - errorFile d - - 0 - errorNorm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataValues",1302,G___ROOT_DICT_ExternalDataFit_base_1127_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - dataFile u 'string' - 0 - TH2Dname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataValuesFromText",2127,G___ROOT_DICT_ExternalDataFit_base_1127_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - dataFile d - - 0 - norm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCovarMatrix",1436,G___ROOT_DICT_ExternalDataFit_base_1127_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - covarFile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCovarMatrixFromText",2261,G___ROOT_DICT_ExternalDataFit_base_1127_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - covarFile i - - 0 - dim", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCovarMatrixFromChol",2230,G___ROOT_DICT_ExternalDataFit_base_1127_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - covarFile i - - 0 - dim", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMapValuesFromText",2035,G___ROOT_DICT_ExternalDataFit_base_1127_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - dataFile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBinMask",977,G___ROOT_DICT_ExternalDataFit_base_1127_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - maskFile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFluxHistogram",1657,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - fluxFile i - - 0 - minE "
"i - - 0 - maxE d - - 0 - fluxNorm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TotalIntegratedFlux",1962,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 '\"width\"' intOpt d - - 0 '-9999.9' low "
"d - - 0 '-9999.9' high", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetAll",796,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillHistograms",1448,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ScaleEvents",1117,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ApplyNormScale",1418,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - norm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNDOF",583,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLikelihood",1316,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFakeDataValues",1677,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fakeOption", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ThrowCovariance",1551,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModeStack",1179,G___ROOT_DICT_ExternalDataFit_base_1127_0_23, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_THStack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCHistogram",1374,G___ROOT_DICT_ExternalDataFit_base_1127_0_24, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataHistogram",1608,G___ROOT_DICT_ExternalDataFit_base_1127_0_25, 85, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCList",844,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataList",1078,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaskList",1096,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFineList",1086,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR), G__defined_typename("vector<TH1*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBinContents",1415,G___ROOT_DICT_ExternalDataFit_base_1127_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - cont u 'vector<double,allocator<double> >' 'vector<double>' 1 - err", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCovarMatrix",1424,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXSec",659,G___ROOT_DICT_ExternalDataFit_base_1127_0_32, 117, G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "u 'string' - 0 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Write",523,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - drawOpt", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("Measurement2D", 1276, G___ROOT_DICT_ExternalDataFit_base_1127_0_34, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement2D), -1, 0, 1, 1, 1, 0, "u 'Measurement2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Measurement2D", 1402, G___ROOT_DICT_ExternalDataFit_base_1127_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_ExternalDataFit_base_1127_0_36, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement2D), -1, 1, 1, 1, 1, 0, "u 'Measurement2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunc_ROOT_DICT_ExternalDataFit_base() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {
}

static void G__cpp_setup_global9() {
}

static void G__cpp_setup_global10() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_global_ROOT_DICT_ExternalDataFit_base() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
  G__cpp_setup_global9();
  G__cpp_setup_global10();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {
}

static void G__cpp_setup_func40() {
}

static void G__cpp_setup_func41() {
}

static void G__cpp_setup_func42() {
}

static void G__cpp_setup_func43() {
}

static void G__cpp_setup_func44() {
}

static void G__cpp_setup_func45() {
}

static void G__cpp_setup_func46() {
}

static void G__cpp_setup_func47() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_func_ROOT_DICT_ExternalDataFit_base() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
  G__cpp_setup_func40();
  G__cpp_setup_func41();
  G__cpp_setup_func42();
  G__cpp_setup_func43();
  G__cpp_setup_func44();
  G__cpp_setup_func45();
  G__cpp_setup_func46();
  G__cpp_setup_func47();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_string = { "string" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_NeutPart = { "NeutPart" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle = { "FitParticle" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_NeutVect = { "NeutVect" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase = { "FitEventBase" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent = { "FitEvent" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitParticlecOallocatorlEFitParticlegRsPgR = { "vector<FitParticle,allocator<FitParticle> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEFitParticlecOallocatorlEFitParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<FitParticle,allocator<FitParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR = { "map<string,double,less<string>,allocator<pair<const string,double> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TH1I = { "TH1I" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TH2I = { "TH2I" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_THStack = { "THStack" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline = { "FitSpline" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types = { "FitSpline::spline_types" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead = { "FitSplineHead" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_listlEFitSplinemUcOallocatorlEFitSplinemUgRsPgR = { "list<FitSpline*,allocator<FitSpline*> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_t2krew = { "t2krew" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEt2krewcLcLET2KSystcOallocatorlEt2krewcLcLET2KSystgRsPgR = { "vector<t2krew::ET2KSyst,allocator<t2krew::ET2KSyst> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEt2krewcLcLET2KSystcOallocatorlEt2krewcLcLET2KSystgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<t2krew::ET2KSyst,allocator<t2krew::ET2KSyst> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEt2krewcLcLET2KSystcOt2krewcLcLT2KSystInfomUcOlesslEt2krewcLcLET2KSystgRcOallocatorlEpairlEconstsPt2krewcLcLET2KSystcOt2krewcLcLT2KSystInfomUgRsPgRsPgR = { "map<t2krew::ET2KSyst,t2krew::T2KSystInfo*,less<t2krew::ET2KSyst>,allocator<pair<const t2krew::ET2KSyst,t2krew::T2KSystInfo*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_t2krewcLcLT2KReWeight = { "t2krew::T2KReWeight" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOt2krewcLcLT2KWghtEngineImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOt2krewcLcLT2KWghtEngineImUgRsPgRsPgR = { "map<string,t2krew::T2KWghtEngineI*,less<string>,allocator<pair<const string,t2krew::T2KWghtEngineI*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_neut = { "neut" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_neutcLcLrew = { "neut::rew" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEneutcLcLrewcLcLENSystcOallocatorlEneutcLcLrewcLcLENSystgRsPgR = { "vector<neut::rew::ENSyst,allocator<neut::rew::ENSyst> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEneutcLcLrewcLcLENSystcOallocatorlEneutcLcLrewcLcLENSystgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<neut::rew::ENSyst,allocator<neut::rew::ENSyst> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEneutcLcLrewcLcLENSystcOneutcLcLrewcLcLNSystInfomUcOlesslEneutcLcLrewcLcLENSystgRcOallocatorlEpairlEconstsPneutcLcLrewcLcLENSystcOneutcLcLrewcLcLNSystInfomUgRsPgRsPgR = { "map<neut::rew::ENSyst,neut::rew::NSystInfo*,less<neut::rew::ENSyst>,allocator<pair<const neut::rew::ENSyst,neut::rew::NSystInfo*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_neutcLcLrewcLcLNReWeight = { "neut::rew::NReWeight" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOneutcLcLrewcLcLNReWeightImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOneutcLcLrewcLcLNReWeightImUgRsPgRsPgR = { "map<string,neut::rew::NReWeightI*,less<string>,allocator<pair<const string,neut::rew::NReWeightI*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_t2krewcLcLT2KNeutReWeight = { "t2krew::T2KNeutReWeight" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_niwg = { "niwg" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_niwgcLcLrew = { "niwg::rew" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLENIWGSystcOallocatorlEniwgcLcLrewcLcLENIWGSystgRsPgR = { "vector<niwg::rew::ENIWGSyst,allocator<niwg::rew::ENIWGSyst> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEniwgcLcLrewcLcLENIWGSystcOallocatorlEniwgcLcLrewcLcLENIWGSystgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<niwg::rew::ENIWGSyst,allocator<niwg::rew::ENIWGSyst> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEniwgcLcLrewcLcLENIWGSystcOniwgcLcLrewcLcLNIWGSystInfomUcOlesslEniwgcLcLrewcLcLENIWGSystgRcOallocatorlEpairlEconstsPniwgcLcLrewcLcLENIWGSystcOniwgcLcLrewcLcLNIWGSystInfomUgRsPgRsPgR = { "map<niwg::rew::ENIWGSyst,niwg::rew::NIWGSystInfo*,less<niwg::rew::ENIWGSyst>,allocator<pair<const niwg::rew::ENIWGSyst,niwg::rew::NIWGSystInfo*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLNIWGPartStackcOallocatorlEniwgcLcLrewcLcLNIWGPartStackgRsPgR = { "vector<niwg::rew::NIWGPartStack,allocator<niwg::rew::NIWGPartStack> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEniwgcLcLrewcLcLNIWGPartStackcOallocatorlEniwgcLcLrewcLcLNIWGPartStackgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<niwg::rew::NIWGPartStack,allocator<niwg::rew::NIWGPartStack> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_niwgcLcLrewcLcLNIWGReWeight = { "niwg::rew::NIWGReWeight" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOniwgcLcLrewcLcLNIWGReWeightImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOniwgcLcLrewcLcLNIWGReWeightImUgRsPgRsPgR = { "map<string,niwg::rew::NIWGReWeightI*,less<string>,allocator<pair<const string,niwg::rew::NIWGReWeightI*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR = { "map<string,TH2D*,less<string>,allocator<pair<const string,TH2D*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEpairlEintcOintgRcOTH3DmUcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOTH3DmUgRsPgRsPgR = { "map<pair<int,int>,TH3D*,less<pair<int,int> >,allocator<pair<const pair<int,int>,TH3D*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEintcOTH3DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH3DmUgRsPgRsPgR = { "map<int,TH3D*,less<int>,allocator<pair<const int,TH3D*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_maplEintcOTH1DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH1DmUgRsPgRsPgR = { "map<int,TH1D*,less<int>,allocator<pair<const int,TH1D*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_t2krewcLcLT2KNIWGReWeight = { "t2krew::T2KNIWGReWeight" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight = { "FitWeight" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETF1cOallocatorlETF1gRsPgR = { "vector<TF1,allocator<TF1> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETF1cOallocatorlETF1gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TF1,allocator<TF1> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_FitBase = { "FitBase" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler = { "InputHandler" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitEventBasemUcOallocatorlEFitEventBasemUgRsPgR = { "vector<FitEventBase*,allocator<FitEventBase*> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEFitEventBasemUcOallocatorlEFitEventBasemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<FitEventBase*,allocator<FitEventBase*> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR = { "vector<TH1D*,allocator<TH1D*> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH1D*,allocator<TH1D*> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_MeasurementBase = { "MeasurementBase" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR = { "vector<TH1*,allocator<TH1*> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH1*,allocator<TH1*> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_Measurement1D = { "Measurement1D" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_JointMeas1D = { "JointMeas1D" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEMeasurementBasemUcOallocatorlEMeasurementBasemUgRsPgR = { "vector<MeasurementBase*,allocator<MeasurementBase*> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEMeasurementBasemUcOallocatorlEMeasurementBasemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MeasurementBase*,allocator<MeasurementBase*> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_ExternalDataFit_baseLN_Measurement2D = { "Measurement2D" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtable_ROOT_DICT_ExternalDataFit_base() {
  G___ROOT_DICT_ExternalDataFit_baseLN_TClass.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TBuffer.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMemberInspector.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TObject.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_string.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TVectorTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TVectorTlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TLorentzVector.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_NeutPart.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TF1.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_NeutVect.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TArrayD.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitParticlecOallocatorlEFitParticlegRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEFitParticlecOallocatorlEFitParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TFile.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TH1D.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TH1I.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TH2I.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TH2D.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TChain.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_THStack.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_listlEFitSplinemUcOallocatorlEFitSplinemUgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_t2krew.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEt2krewcLcLET2KSystcOallocatorlEt2krewcLcLET2KSystgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEt2krewcLcLET2KSystcOallocatorlEt2krewcLcLET2KSystgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEt2krewcLcLET2KSystcOt2krewcLcLT2KSystInfomUcOlesslEt2krewcLcLET2KSystgRcOallocatorlEpairlEconstsPt2krewcLcLET2KSystcOt2krewcLcLT2KSystInfomUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_t2krewcLcLT2KReWeight.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOt2krewcLcLT2KWghtEngineImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOt2krewcLcLT2KWghtEngineImUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_neut.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_neutcLcLrew.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEneutcLcLrewcLcLENSystcOallocatorlEneutcLcLrewcLcLENSystgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEneutcLcLrewcLcLENSystcOallocatorlEneutcLcLrewcLcLENSystgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEneutcLcLrewcLcLENSystcOneutcLcLrewcLcLNSystInfomUcOlesslEneutcLcLrewcLcLENSystgRcOallocatorlEpairlEconstsPneutcLcLrewcLcLENSystcOneutcLcLrewcLcLNSystInfomUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_neutcLcLrewcLcLNReWeight.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOneutcLcLrewcLcLNReWeightImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOneutcLcLrewcLcLNReWeightImUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_t2krewcLcLT2KNeutReWeight.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_niwg.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_niwgcLcLrew.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLENIWGSystcOallocatorlEniwgcLcLrewcLcLENIWGSystgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEniwgcLcLrewcLcLENIWGSystcOallocatorlEniwgcLcLrewcLcLENIWGSystgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEniwgcLcLrewcLcLENIWGSystcOniwgcLcLrewcLcLNIWGSystInfomUcOlesslEniwgcLcLrewcLcLENIWGSystgRcOallocatorlEpairlEconstsPniwgcLcLrewcLcLENIWGSystcOniwgcLcLrewcLcLNIWGSystInfomUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLNIWGPartStackcOallocatorlEniwgcLcLrewcLcLNIWGPartStackgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEniwgcLcLrewcLcLNIWGPartStackcOallocatorlEniwgcLcLrewcLcLNIWGPartStackgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_niwgcLcLrewcLcLNIWGReWeight.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOniwgcLcLrewcLcLNIWGReWeightImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOniwgcLcLrewcLcLNIWGReWeightImUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEpairlEintcOintgRcOTH3DmUcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOTH3DmUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEintcOTH3DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH3DmUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_maplEintcOTH1DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH1DmUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_t2krewcLcLT2KNIWGReWeight.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETF1cOallocatorlETF1gRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETF1cOallocatorlETF1gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_FitBase.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitEventBasemUcOallocatorlEFitEventBasemUgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEFitEventBasemUcOallocatorlEFitEventBasemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_MeasurementBase.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_Measurement1D.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_JointMeas1D.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEMeasurementBasemUcOallocatorlEMeasurementBasemUgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEMeasurementBasemUcOallocatorlEMeasurementBasemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_ExternalDataFit_baseLN_Measurement2D.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtable_ROOT_DICT_ExternalDataFit_base() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TClass);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TBuffer);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TObject);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_string);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_NeutPart);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_FitParticle),sizeof(FitParticle),-1,324864,(char*)NULL,G__setup_memvarFitParticle,G__setup_memfuncFitParticle);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TF1);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_NeutVect);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TArrayD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEventBase),sizeof(FitEventBase),-1,324864,(char*)NULL,G__setup_memvarFitEventBase,G__setup_memfuncFitEventBase);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_FitEvent),sizeof(FitEvent),-1,324864,(char*)NULL,G__setup_memvarFitEvent,G__setup_memfuncFitEvent);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitParticlecOallocatorlEFitParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEFitParticlecOallocatorlEFitParticlegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TFile);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1D);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TH1I);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2I);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TH2D);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TChain);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_THStack);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSpline),sizeof(FitSpline),-1,324864,(char*)NULL,G__setup_memvarFitSpline,G__setup_memfuncFitSpline);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplinecLcLspline_types);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_FitSplineHead),sizeof(FitSplineHead),-1,292096,(char*)NULL,G__setup_memvarFitSplineHead,G__setup_memfuncFitSplineHead);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_listlEFitSplinemUcOallocatorlEFitSplinemUgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_t2krew);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEt2krewcLcLET2KSystcOallocatorlEt2krewcLcLET2KSystgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEt2krewcLcLET2KSystcOallocatorlEt2krewcLcLET2KSystgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEt2krewcLcLET2KSystcOt2krewcLcLT2KSystInfomUcOlesslEt2krewcLcLET2KSystgRcOallocatorlEpairlEconstsPt2krewcLcLET2KSystcOt2krewcLcLT2KSystInfomUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_t2krewcLcLT2KReWeight);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOt2krewcLcLT2KWghtEngineImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOt2krewcLcLT2KWghtEngineImUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_neut);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_neutcLcLrew);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEneutcLcLrewcLcLENSystcOallocatorlEneutcLcLrewcLcLENSystgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEneutcLcLrewcLcLENSystcOallocatorlEneutcLcLrewcLcLENSystgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEneutcLcLrewcLcLENSystcOneutcLcLrewcLcLNSystInfomUcOlesslEneutcLcLrewcLcLENSystgRcOallocatorlEpairlEconstsPneutcLcLrewcLcLENSystcOneutcLcLrewcLcLNSystInfomUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_neutcLcLrewcLcLNReWeight);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOneutcLcLrewcLcLNReWeightImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOneutcLcLrewcLcLNReWeightImUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_t2krewcLcLT2KNeutReWeight);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_niwg);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_niwgcLcLrew);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLENIWGSystcOallocatorlEniwgcLcLrewcLcLENIWGSystgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEniwgcLcLrewcLcLENIWGSystcOallocatorlEniwgcLcLrewcLcLENIWGSystgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEniwgcLcLrewcLcLENIWGSystcOniwgcLcLrewcLcLNIWGSystInfomUcOlesslEniwgcLcLrewcLcLENIWGSystgRcOallocatorlEpairlEconstsPniwgcLcLrewcLcLENIWGSystcOniwgcLcLrewcLcLNIWGSystInfomUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEniwgcLcLrewcLcLNIWGPartStackcOallocatorlEniwgcLcLrewcLcLNIWGPartStackgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEniwgcLcLrewcLcLNIWGPartStackcOallocatorlEniwgcLcLrewcLcLNIWGPartStackgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_niwgcLcLrewcLcLNIWGReWeight);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOniwgcLcLrewcLcLNIWGReWeightImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOniwgcLcLrewcLcLNIWGReWeightImUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEpairlEintcOintgRcOTH3DmUcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOTH3DmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEintcOTH3DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH3DmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_maplEintcOTH1DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH1DmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_t2krewcLcLT2KNIWGReWeight);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_FitWeight),sizeof(FitWeight),-1,324864,(char*)NULL,G__setup_memvarFitWeight,G__setup_memfuncFitWeight);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETF1cOallocatorlETF1gRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETF1cOallocatorlETF1gRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_FitBase),0,-1,0,(char*)NULL,G__setup_memvarFitBase,G__setup_memfuncFitBase);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_InputHandler),sizeof(InputHandler),-1,324864,(char*)NULL,G__setup_memvarInputHandler,G__setup_memfuncInputHandler);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEFitEventBasemUcOallocatorlEFitEventBasemUgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEFitEventBasemUcOallocatorlEFitEventBasemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_MeasurementBase),sizeof(MeasurementBase),-1,263433,(char*)NULL,G__setup_memvarMeasurementBase,G__setup_memfuncMeasurementBase);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement1D),sizeof(Measurement1D),-1,263424,(char*)NULL,G__setup_memvarMeasurement1D,G__setup_memfuncMeasurement1D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_JointMeas1D),sizeof(JointMeas1D),-1,263424,(char*)NULL,G__setup_memvarJointMeas1D,G__setup_memfuncJointMeas1D);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_vectorlEMeasurementBasemUcOallocatorlEMeasurementBasemUgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_reverse_iteratorlEvectorlEMeasurementBasemUcOallocatorlEMeasurementBasemUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_ExternalDataFit_baseLN_Measurement2D),sizeof(Measurement2D),-1,263424,(char*)NULL,G__setup_memvarMeasurement2D,G__setup_memfuncMeasurement2D);
}
extern "C" void G__cpp_setup_ROOT_DICT_ExternalDataFit_base(void) {
  G__check_setup_version(30051515,"G__cpp_setup_ROOT_DICT_ExternalDataFit_base()");
  G__set_cpp_environment_ROOT_DICT_ExternalDataFit_base();
  G__cpp_setup_tagtable_ROOT_DICT_ExternalDataFit_base();

  G__cpp_setup_inheritance_ROOT_DICT_ExternalDataFit_base();

  G__cpp_setup_typetable_ROOT_DICT_ExternalDataFit_base();

  G__cpp_setup_memvar_ROOT_DICT_ExternalDataFit_base();

  G__cpp_setup_memfunc_ROOT_DICT_ExternalDataFit_base();
  G__cpp_setup_global_ROOT_DICT_ExternalDataFit_base();
  G__cpp_setup_func_ROOT_DICT_ExternalDataFit_base();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunc_ROOT_DICT_ExternalDataFit_base();
  return;
}
class G__cpp_setup_init_ROOT_DICT_ExternalDataFit_base {
  public:
    G__cpp_setup_init_ROOT_DICT_ExternalDataFit_base() { G__add_setup_func("_ROOT_DICT_ExternalDataFit_base",(G__incsetup)(&G__cpp_setup_ROOT_DICT_ExternalDataFit_base)); G__call_setup_funcs(); }
   ~G__cpp_setup_init_ROOT_DICT_ExternalDataFit_base() { G__remove_setup_func("_ROOT_DICT_ExternalDataFit_base"); }
};
G__cpp_setup_init_ROOT_DICT_ExternalDataFit_base G__cpp_setup_initializer_ROOT_DICT_ExternalDataFit_base;

